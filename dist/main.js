/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@gltf-transform/core/dist/core.modern.js":
/*!***************************************************************!*\
  !*** ./node_modules/@gltf-transform/core/dist/core.modern.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Accessor\": () => (/* binding */ Y),\n/* harmony export */   \"Animation\": () => (/* binding */ Z),\n/* harmony export */   \"AnimationChannel\": () => (/* binding */ K),\n/* harmony export */   \"AnimationSampler\": () => (/* binding */ Q),\n/* harmony export */   \"Buffer\": () => (/* binding */ X),\n/* harmony export */   \"BufferUtils\": () => (/* binding */ E),\n/* harmony export */   \"COPY_IDENTITY\": () => (/* binding */ V),\n/* harmony export */   \"Camera\": () => (/* binding */ tt),\n/* harmony export */   \"ColorUtils\": () => (/* binding */ S),\n/* harmony export */   \"DenoIO\": () => (/* binding */ Ot),\n/* harmony export */   \"Document\": () => (/* binding */ wt),\n/* harmony export */   \"ExtensibleProperty\": () => (/* binding */ H),\n/* harmony export */   \"Extension\": () => (/* binding */ yt),\n/* harmony export */   \"ExtensionProperty\": () => (/* binding */ et),\n/* harmony export */   \"FileUtils\": () => (/* binding */ N),\n/* harmony export */   \"Format\": () => (/* binding */ v),\n/* harmony export */   \"GLB_BUFFER\": () => (/* binding */ g),\n/* harmony export */   \"Graph\": () => (/* reexport safe */ property_graph__WEBPACK_IMPORTED_MODULE_0__.Graph),\n/* harmony export */   \"GraphEdge\": () => (/* reexport safe */ property_graph__WEBPACK_IMPORTED_MODULE_0__.GraphEdge),\n/* harmony export */   \"ImageUtils\": () => (/* binding */ I),\n/* harmony export */   \"Logger\": () => (/* binding */ F),\n/* harmony export */   \"Material\": () => (/* binding */ at),\n/* harmony export */   \"MathUtils\": () => (/* binding */ B),\n/* harmony export */   \"Mesh\": () => (/* binding */ ut),\n/* harmony export */   \"Node\": () => (/* binding */ ct),\n/* harmony export */   \"NodeIO\": () => (/* binding */ Nt),\n/* harmony export */   \"PlatformIO\": () => (/* binding */ Rt),\n/* harmony export */   \"Primitive\": () => (/* binding */ ht),\n/* harmony export */   \"PrimitiveTarget\": () => (/* binding */ lt),\n/* harmony export */   \"Property\": () => (/* binding */ W),\n/* harmony export */   \"PropertyType\": () => (/* binding */ p),\n/* harmony export */   \"ReaderContext\": () => (/* binding */ vt),\n/* harmony export */   \"Root\": () => (/* binding */ mt),\n/* harmony export */   \"Scene\": () => (/* binding */ dt),\n/* harmony export */   \"Skin\": () => (/* binding */ gt),\n/* harmony export */   \"Texture\": () => (/* binding */ pt),\n/* harmony export */   \"TextureChannel\": () => (/* binding */ y),\n/* harmony export */   \"TextureInfo\": () => (/* binding */ rt),\n/* harmony export */   \"VERSION\": () => (/* binding */ d),\n/* harmony export */   \"Verbosity\": () => (/* binding */ T),\n/* harmony export */   \"VertexLayout\": () => (/* binding */ m),\n/* harmony export */   \"WebIO\": () => (/* binding */ Ct),\n/* harmony export */   \"WriterContext\": () => (/* binding */ Et),\n/* harmony export */   \"bounds\": () => (/* binding */ x),\n/* harmony export */   \"uuid\": () => (/* binding */ J)\n/* harmony export */ });\n/* harmony import */ var property_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-graph */ \"./node_modules/property-graph/dist/property-graph.modern.js\");\n/* harmony import */ var gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix/vec3 */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix/mat4 */ \"./node_modules/gl-matrix/esm/mat4.js\");\nconst d=\"v2.4.7\",g=\"@glb.bin\";var p,m,w,y,v,T;function x(t){const e={min:[Infinity,Infinity,Infinity],max:[-Infinity,-Infinity,-Infinity]},r=t.propertyType===p.NODE?[t]:t.listChildren();for(const t of r)t.traverse(t=>{const r=t.getMesh();if(!r)return;const s=b(r,t.getWorldMatrix());A(s.min,e),A(s.max,e)});return e}function b(t,e){const r={min:[Infinity,Infinity,Infinity],max:[-Infinity,-Infinity,-Infinity]};for(const s of t.listPrimitives()){const t=s.getAttribute(\"POSITION\");if(!t)continue;let n=[0,0,0],i=[0,0,0];for(let s=0;s<t.getCount();s++)n=t.getElement(s,n),i=(0,gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_1__.transformMat4)(i,n,e),A(i,r)}return r}function A(t,e){for(let r=0;r<3;r++)e.min[r]=Math.min(t[r],e.min[r]),e.max[r]=Math.max(t[r],e.max[r])}!function(t){t.ACCESSOR=\"Accessor\",t.ANIMATION=\"Animation\",t.ANIMATION_CHANNEL=\"AnimationChannel\",t.ANIMATION_SAMPLER=\"AnimationSampler\",t.BUFFER=\"Buffer\",t.CAMERA=\"Camera\",t.MATERIAL=\"Material\",t.MESH=\"Mesh\",t.PRIMITIVE=\"Primitive\",t.PRIMITIVE_TARGET=\"PrimitiveTarget\",t.NODE=\"Node\",t.ROOT=\"Root\",t.SCENE=\"Scene\",t.SKIN=\"Skin\",t.TEXTURE=\"Texture\",t.TEXTURE_INFO=\"TextureInfo\"}(p||(p={})),function(t){t.INTERLEAVED=\"interleaved\",t.SEPARATE=\"separate\"}(m||(m={})),function(t){t.ARRAY_BUFFER=\"ARRAY_BUFFER\",t.ELEMENT_ARRAY_BUFFER=\"ELEMENT_ARRAY_BUFFER\",t.INVERSE_BIND_MATRICES=\"INVERSE_BIND_MATRICES\",t.OTHER=\"OTHER\"}(w||(w={})),function(t){t[t.R=4096]=\"R\",t[t.G=256]=\"G\",t[t.B=16]=\"B\",t[t.A=1]=\"A\"}(y||(y={})),function(t){t.GLTF=\"GLTF\",t.GLB=\"GLB\"}(v||(v={}));class E{static createBufferFromDataURI(t){if(\"undefined\"==typeof Buffer){const e=atob(t.split(\",\")[1]),r=new Uint8Array(e.length);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return r}{const e=t.split(\",\")[1],r=t.indexOf(\"base64\")>=0;return Buffer.from(e,r?\"base64\":\"utf8\")}}static encodeText(t){return\"undefined\"!=typeof TextEncoder?(new TextEncoder).encode(t):Buffer.from(t)}static decodeText(t){return\"undefined\"!=typeof TextDecoder?(new TextDecoder).decode(t):Buffer.from(t).toString(\"utf8\")}static concat(t){let e=0;for(const r of t)e+=r.byteLength;const r=new Uint8Array(e);let s=0;for(const e of t)r.set(e,s),s+=e.byteLength;return r}static pad(t,e=0){const r=this.padNumber(t.byteLength);if(r===t.byteLength)return t;const s=new Uint8Array(r);if(s.set(t),0!==e)for(let n=t.byteLength;n<r;n++)s[n]=e;return s}static padNumber(t){return 4*Math.ceil(t/4)}static equals(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;let r=t.byteLength;for(;r--;)if(t[r]!==e[r])return!1;return!0}static toView(t,e=0,r=Infinity){return new Uint8Array(t.buffer,t.byteOffset+e,Math.min(t.byteLength,r))}static assertView(t){if(t&&!ArrayBuffer.isView(t))throw new Error(`Method requires Uint8Array parameter; received \"${typeof t}\".`);return t}}class S{static hexToFactor(t,e){t=Math.floor(t);const r=e;return r[0]=(t>>16&255)/255,r[1]=(t>>8&255)/255,r[2]=(255&t)/255,this.convertSRGBToLinear(e,e)}static factorToHex(t){const e=[...t],[r,s,n]=this.convertLinearToSRGB(t,e);return 255*r<<16^255*s<<8^255*n<<0}static convertSRGBToLinear(t,e){const r=t,s=e;for(let t=0;t<3;t++)s[t]=r[t]<.04045?.0773993808*r[t]:Math.pow(.9478672986*r[t]+.0521327014,2.4);return e}static convertLinearToSRGB(t,e){const r=t,s=e;for(let t=0;t<3;t++)s[t]=r[t]<.0031308?12.92*r[t]:1.055*Math.pow(r[t],.41666)-.055;return e}}class M{match(t){return t.length>=8&&137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]&&13===t[4]&&10===t[5]&&26===t[6]&&10===t[7]}getSize(t){const e=new DataView(t.buffer,t.byteOffset);return E.decodeText(t.slice(12,16))===M.PNG_FRIED_CHUNK_NAME?[e.getUint32(32,!1),e.getUint32(36,!1)]:[e.getUint32(16,!1),e.getUint32(20,!1)]}getChannels(t){return 4}}M.PNG_FRIED_CHUNK_NAME=\"CgBI\";class I{static registerFormat(t,e){this.impls[t]=e}static getMimeType(t){for(const e in this.impls)if(this.impls[e].match(t))return e;return null}static getSize(t,e){return this.impls[e]?this.impls[e].getSize(t):null}static getChannels(t,e){return this.impls[e]?this.impls[e].getChannels(t):null}static getMemSize(t,e){if(!this.impls[e])return null;if(this.impls[e].getGPUByteLength)return this.impls[e].getGPUByteLength(t);let r=0;const s=this.getSize(t,e);if(!s)return null;for(;s[0]>1||s[1]>1;)r+=s[0]*s[1]*4,s[0]=Math.max(Math.floor(s[0]/2),1),s[1]=Math.max(Math.floor(s[1]/2),1);return r+=4,r}static mimeTypeToExtension(t){return\"image/jpeg\"===t?\"jpg\":t.split(\"/\").pop()}static extensionToMimeType(t){return\"jpg\"===t?\"image/jpeg\":`image/${t}`}}function R(t,e){if(e>t.byteLength)throw new TypeError(\"Corrupt JPG, exceeded buffer limits\");if(255!==t.getUint8(e))throw new TypeError(\"Invalid JPG, marker table corrupted\");return t}I.impls={\"image/jpeg\":new class{match(t){return t.length>=3&&255===t[0]&&216===t[1]&&255===t[2]}getSize(t){let e,r,s=new DataView(t.buffer,t.byteOffset+4);for(;s.byteLength;){if(e=s.getUint16(0,!1),R(s,e),r=s.getUint8(e+1),192===r||193===r||194===r)return[s.getUint16(e+7,!1),s.getUint16(e+5,!1)];s=new DataView(t.buffer,s.byteOffset+e+2)}throw new TypeError(\"Invalid JPG, no size found\")}getChannels(t){return 3}},\"image/png\":new M};class N{static basename(t){const e=t.split(/[\\\\/]/).pop();return e.substring(0,e.lastIndexOf(\".\"))}static extension(t){if(t.startsWith(\"data:image/\")){const e=t.match(/data:(image\\/\\w+)/)[1];return I.mimeTypeToExtension(e)}return t.startsWith(\"data:model/gltf+json\")?\"gltf\":t.startsWith(\"data:model/gltf-binary\")?\"glb\":t.startsWith(\"data:application/\")?\"bin\":t.split(/[\\\\/]/).pop().split(/[.]/).pop()}}function O(t){return\"[object Object]\"===Object.prototype.toString.call(t)}function C(t){if(!1===O(t))return!1;const e=t.constructor;if(void 0===e)return!0;const r=e.prototype;return!1!==O(r)&&!1!==Object.prototype.hasOwnProperty.call(r,\"isPrototypeOf\")}!function(t){t[t.SILENT=4]=\"SILENT\",t[t.ERROR=3]=\"ERROR\",t[t.WARN=2]=\"WARN\",t[t.INFO=1]=\"INFO\",t[t.DEBUG=0]=\"DEBUG\"}(T||(T={}));class F{constructor(t){this.verbosity=void 0,this.verbosity=t}debug(t){this.verbosity<=F.Verbosity.DEBUG&&console.debug(t)}info(t){this.verbosity<=F.Verbosity.INFO&&console.info(t)}warn(t){this.verbosity<=F.Verbosity.WARN&&console.warn(t)}error(t){this.verbosity<=F.Verbosity.ERROR&&console.error(t)}}F.Verbosity=T,F.DEFAULT_INSTANCE=new F(F.Verbosity.INFO);class B{static identity(t){return t}static eq(t,e){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(Math.abs(t[r]-e[r])>1e-5)return!1;return!0}static denormalize(t,e){switch(e){case 5126:return t;case 5123:return t/65535;case 5121:return t/255;case 5122:return Math.max(t/32767,-1);case 5120:return Math.max(t/127,-1);default:throw new Error(\"Invalid component type.\")}}static normalize(t,e){switch(e){case 5126:return t;case 5123:return Math.round(65535*t);case 5121:return Math.round(255*t);case 5122:return Math.round(32767*t);case 5120:return Math.round(127*t);default:throw new Error(\"Invalid component type.\")}}static decompose(t,e,r,s){let n=(0,gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_1__.length)([t[0],t[1],t[2]]);const i=(0,gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_1__.length)([t[4],t[5],t[6]]),o=(0,gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_1__.length)([t[8],t[9],t[10]]);(0,gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.determinant)(t)<0&&(n=-n),e[0]=t[12],e[1]=t[13],e[2]=t[14];const a=t.slice(),u=1/n,f=1/i,d=1/o;a[0]*=u,a[1]*=u,a[2]*=u,a[4]*=f,a[5]*=f,a[6]*=f,a[8]*=d,a[9]*=d,a[10]*=d,(0,gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.getRotation)(r,a),s[0]=n,s[1]=i,s[2]=o}static compose(t,e,r,s){const n=s,i=e[0],o=e[1],a=e[2],u=e[3],c=i+i,h=o+o,l=a+a,f=i*c,d=i*h,g=i*l,p=o*h,m=o*l,w=a*l,y=u*c,v=u*h,T=u*l,x=r[0],b=r[1],A=r[2];return n[0]=(1-(p+w))*x,n[1]=(d+T)*x,n[2]=(g-v)*x,n[3]=0,n[4]=(d-T)*b,n[5]=(1-(f+w))*b,n[6]=(m+y)*b,n[7]=0,n[8]=(g+v)*A,n[9]=(m-y)*A,n[10]=(1-(f+p))*A,n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n}}function P(t,e){if(!!t!=!!e)return!1;const r=t.getChild(),s=e.getChild();return r===s||r.equals(s)}function U(t,e){if(!!t!=!!e)return!1;if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++){const s=t[r],n=e[r];if(s.getChild()!==n.getChild()&&!s.getChild().equals(n.getChild()))return!1}return!0}function j(t,e){if(!!t!=!!e)return!1;const r=Object.keys(t),s=Object.keys(e);if(r.length!==s.length)return!1;for(const r in t){const s=t[r],n=e[r];if(!!s!=!!n)return!1;const i=s.getChild(),o=n.getChild();if(i!==o&&!i.equals(o))return!1}return!0}function L(t,e){if(t===e)return!0;if(!!t!=!!e||!t||!e)return!1;if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++)if(t[r]!==e[r])return!1;return!0}function _(t,e){if(t===e)return!0;if(!!t!=!!e)return!1;if(!C(t)||!C(e))return t===e;const r=t,s=e;let n,i=0,o=0;for(n in r)i++;for(n in s)o++;if(i!==o)return!1;for(n in r){const t=r[n],e=s[n];if(D(t)&&D(e)){if(!L(t,e))return!1}else if(C(t)&&C(e)){if(!_(t,e))return!1}else if(t!==e)return!1}return!0}function D(t){return Array.isArray(t)||ArrayBuffer.isView(t)}const k=\"23456789abdegjkmnpqrvwxyzABDEGJKMNPQRVWXYZ\",z=new Set,G=function(){let t=\"\";for(let e=0;e<6;e++)t+=k.charAt(Math.floor(Math.random()*k.length));return t},J=function(){for(let t=0;t<999;t++){const t=G();if(!z.has(t))return z.add(t),t}return\"\"};class ${static dirname(t){const e=t.lastIndexOf(\"/\");return-1===e?\"./\":t.substring(0,e+1)}static basename(t){return N.basename(new URL(t,\"https://null.example\").pathname)}static extension(t){return N.extension(new URL(t,\"https://null.example\").pathname)}static resolve(t,e){if(!this.isRelativePath(e))return e;const r=t.split(\"/\"),s=e.split(\"/\");r.pop();for(let t=0;t<s.length;t++)\".\"!==s[t]&&(\"..\"===s[t]?r.pop():r.push(s[t]));return r.join(\"/\")}static isAbsoluteURL(t){return this.PROTOCOL_REGEXP.test(t)}static isRelativePath(t){return!/^(?:[a-zA-Z]+:)?\\//.test(t)}}$.DEFAULT_INIT={},$.PROTOCOL_REGEXP=/^[a-zA-Z]+:\\/\\//;const V=t=>t,q=new Set;class W extends property_graph__WEBPACK_IMPORTED_MODULE_0__.GraphNode{constructor(t,r=\"\"){super(t),this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes].name=r,this.init(),this.dispatchEvent({type:\"create\"})}getDefaults(){return Object.assign(super.getDefaults(),{name:\"\",extras:{}})}getName(){return this.get(\"name\")}setName(t){return this.set(\"name\",t)}getExtras(){return this.get(\"extras\")}setExtras(t){return this.set(\"extras\",t)}clone(){return new(0,this.constructor)(this.graph).copy(this,V)}copy(t,o=V){for(const t in this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes]){const o=this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes][t];if(o instanceof property_graph__WEBPACK_IMPORTED_MODULE_0__.GraphEdge)this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$immutableKeys].has(t)||o.dispose();else if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefList)(o))for(const t of o)t.dispose();else if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefMap)(o))for(const t in o)o[t].dispose()}for(const a in t[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes]){const u=this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes][a],c=t[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes][a];if(c instanceof property_graph__WEBPACK_IMPORTED_MODULE_0__.GraphEdge)this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$immutableKeys].has(a)?u.getChild().copy(o(c.getChild()),o):this.setRef(a,o(c.getChild()),c.getAttributes());else if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefList)(c))for(const t of c)this.addRef(a,o(t.getChild()),t.getAttributes());else if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefMap)(c))for(const t in c){const e=c[t];this.setRefMap(a,t,o(e.getChild()),e.getAttributes())}else this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes][a]=C(c)?JSON.parse(JSON.stringify(c)):Array.isArray(c)||c instanceof ArrayBuffer||ArrayBuffer.isView(c)?c.slice():c}return this}equals(t,r=q){if(this===t)return!0;if(this.propertyType!==t.propertyType)return!1;for(const s in this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes]){if(r.has(s))continue;const a=this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes][s],u=t[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes][s];if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRef)(a)||(0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRef)(u)){if(!P(a,u))return!1}else if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefList)(a)||(0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefList)(u)){if(!U(a,u))return!1}else if((0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefMap)(a)||(0,property_graph__WEBPACK_IMPORTED_MODULE_0__.isRefMap)(u)){if(!j(a,u))return!1}else if(C(a)||C(u)){if(!_(a,u))return!1}else if(D(a)||D(u)){if(!L(a,u))return!1}else if(a!==u)return!1}return!0}detach(){return this.graph.disconnectParents(this,t=>\"Root\"!==t.propertyType),this}listParents(){return this.graph.listParents(this)}}class H extends W{getDefaults(){return Object.assign(super.getDefaults(),{extensions:{}})}getExtension(t){return this.getRefMap(\"extensions\",t)}setExtension(t,e){return e&&e.t(this),this.setRefMap(\"extensions\",t,e)}listExtensions(){return this.listRefMapValues(\"extensions\")}}class Y extends H{constructor(...t){super(...t),this.i=B.identity,this.o=B.identity}init(){this.propertyType=p.ACCESSOR}getDefaults(){return Object.assign(super.getDefaults(),{array:null,type:Y.Type.SCALAR,componentType:Y.ComponentType.FLOAT,normalized:!1,buffer:null})}copy(t,e=V){return super.copy(t,e),this.i=t.i,this.o=t.o,this}static getElementSize(t){switch(t){case Y.Type.SCALAR:return 1;case Y.Type.VEC2:return 2;case Y.Type.VEC3:return 3;case Y.Type.VEC4:case Y.Type.MAT2:return 4;case Y.Type.MAT3:return 9;case Y.Type.MAT4:return 16;default:throw new Error(\"Unexpected type: \"+t)}}static getComponentSize(t){switch(t){case Y.ComponentType.BYTE:case Y.ComponentType.UNSIGNED_BYTE:return 1;case Y.ComponentType.SHORT:case Y.ComponentType.UNSIGNED_SHORT:return 2;case Y.ComponentType.UNSIGNED_INT:case Y.ComponentType.FLOAT:return 4;default:throw new Error(\"Unexpected component type: \"+t)}}getMinNormalized(t){const e=this.getElementSize();this.getMin(t);for(let r=0;r<e;r++)t[r]=this.o(t[r]);return t}getMin(t){const e=this.get(\"array\"),r=this.getCount(),s=this.getElementSize();for(let e=0;e<s;e++)t[e]=Infinity;for(let n=0;n<r*s;n+=s)for(let r=0;r<s;r++){const s=e[n+r];Number.isFinite(s)&&(t[r]=Math.min(t[r],s))}return t}getMaxNormalized(t){const e=this.getElementSize();this.getMax(t);for(let r=0;r<e;r++)t[r]=this.o(t[r]);return t}getMax(t){const e=this.get(\"array\"),r=this.getCount(),s=this.getElementSize();for(let e=0;e<s;e++)t[e]=-Infinity;for(let n=0;n<r*s;n+=s)for(let r=0;r<s;r++){const s=e[n+r];Number.isFinite(s)&&(t[r]=Math.max(t[r],s))}return t}getCount(){const t=this.get(\"array\");return t?t.length/this.getElementSize():0}getType(){return this.get(\"type\")}setType(t){return this.set(\"type\",t)}getElementSize(){return Y.getElementSize(this.get(\"type\"))}getComponentSize(){return this.get(\"array\").BYTES_PER_ELEMENT}getComponentType(){return this.get(\"componentType\")}getNormalized(){return this.get(\"normalized\")}setNormalized(t){return this.set(\"normalized\",t),t?(this.o=t=>B.denormalize(t,this.get(\"componentType\")),this.i=t=>B.normalize(t,this.get(\"componentType\"))):(this.o=B.identity,this.i=B.identity),this}getScalar(t){const e=this.getElementSize();return this.o(this.get(\"array\")[t*e])}setScalar(t,e){return this.get(\"array\")[t*this.getElementSize()]=this.i(e),this}getElement(t,e){const r=this.getElementSize(),s=this.get(\"array\");for(let n=0;n<r;n++)e[n]=this.o(s[t*r+n]);return e}setElement(t,e){const r=this.getElementSize(),s=this.get(\"array\");for(let n=0;n<r;n++)s[t*r+n]=this.i(e[n]);return this}getBuffer(){return this.getRef(\"buffer\")}setBuffer(t){return this.setRef(\"buffer\",t)}getArray(){return this.get(\"array\")}setArray(t){return this.set(\"componentType\",t?function(t){switch(t.constructor){case Float32Array:return Y.ComponentType.FLOAT;case Uint32Array:return Y.ComponentType.UNSIGNED_INT;case Uint16Array:return Y.ComponentType.UNSIGNED_SHORT;case Uint8Array:return Y.ComponentType.UNSIGNED_BYTE;case Int16Array:return Y.ComponentType.SHORT;case Int8Array:return Y.ComponentType.BYTE;default:throw new Error(\"Unknown accessor componentType.\")}}(t):Y.ComponentType.FLOAT),this.set(\"array\",t),this}getByteLength(){const t=this.get(\"array\");return t?t.byteLength:0}}Y.Type={SCALAR:\"SCALAR\",VEC2:\"VEC2\",VEC3:\"VEC3\",VEC4:\"VEC4\",MAT2:\"MAT2\",MAT3:\"MAT3\",MAT4:\"MAT4\"},Y.ComponentType={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,UNSIGNED_INT:5125,FLOAT:5126};class Z extends H{init(){this.propertyType=p.ANIMATION}getDefaults(){return Object.assign(super.getDefaults(),{channels:[],samplers:[]})}addChannel(t){return this.addRef(\"channels\",t)}removeChannel(t){return this.removeRef(\"channels\",t)}listChannels(){return this.listRefs(\"channels\")}addSampler(t){return this.addRef(\"samplers\",t)}removeSampler(t){return this.removeRef(\"samplers\",t)}listSamplers(){return this.listRefs(\"samplers\")}}class K extends H{init(){this.propertyType=p.ANIMATION_CHANNEL}getDefaults(){return Object.assign(super.getDefaults(),{targetPath:null,targetNode:null,sampler:null})}getTargetPath(){return this.get(\"targetPath\")}setTargetPath(t){return this.set(\"targetPath\",t)}getTargetNode(){return this.getRef(\"targetNode\")}setTargetNode(t){return this.setRef(\"targetNode\",t)}getSampler(){return this.getRef(\"sampler\")}setSampler(t){return this.setRef(\"sampler\",t)}}K.TargetPath={TRANSLATION:\"translation\",ROTATION:\"rotation\",SCALE:\"scale\",WEIGHTS:\"weights\"};class Q extends H{init(){this.propertyType=p.ANIMATION_SAMPLER}getDefaultAttributes(){return Object.assign(super.getDefaults(),{interpolation:Q.Interpolation.LINEAR,input:null,output:null})}getInterpolation(){return this.get(\"interpolation\")}setInterpolation(t){return this.set(\"interpolation\",t)}getInput(){return this.getRef(\"input\")}setInput(t){return this.setRef(\"input\",t,{usage:w.OTHER})}getOutput(){return this.getRef(\"output\")}setOutput(t){return this.setRef(\"output\",t,{usage:w.OTHER})}}Q.Interpolation={LINEAR:\"LINEAR\",STEP:\"STEP\",CUBICSPLINE:\"CUBICSPLINE\"};class X extends H{init(){this.propertyType=p.BUFFER}getDefaults(){return Object.assign(super.getDefaults(),{uri:\"\"})}getURI(){return this.get(\"uri\")}setURI(t){return this.set(\"uri\",t)}}class tt extends H{init(){this.propertyType=p.CAMERA}getDefaults(){return Object.assign(super.getDefaults(),{type:tt.Type.PERSPECTIVE,znear:.1,zfar:100,aspectRatio:null,yfov:2*Math.PI*50/360,xmag:1,ymag:1})}getType(){return this.get(\"type\")}setType(t){return this.set(\"type\",t)}getZNear(){return this.get(\"znear\")}setZNear(t){return this.set(\"znear\",t)}getZFar(){return this.get(\"zfar\")}setZFar(t){return this.set(\"zfar\",t)}getAspectRatio(){return this.get(\"aspectRatio\")}setAspectRatio(t){return this.set(\"aspectRatio\",t)}getYFov(){return this.get(\"yfov\")}setYFov(t){return this.set(\"yfov\",t)}getXMag(){return this.get(\"xmag\")}setXMag(t){return this.set(\"xmag\",t)}getYMag(){return this.get(\"ymag\")}setYMag(t){return this.set(\"ymag\",t)}}tt.Type={PERSPECTIVE:\"perspective\",ORTHOGRAPHIC:\"orthographic\"};class et extends W{t(t){if(!this.parentTypes.includes(t.propertyType))throw new Error(`Parent \"${t.propertyType}\" invalid for child \"${this.propertyType}\".`)}}et.EXTENSION_NAME=void 0;class rt extends H{init(){this.propertyType=p.TEXTURE_INFO}getDefaults(){return Object.assign(super.getDefaults(),{texCoord:0,magFilter:null,minFilter:null,wrapS:rt.WrapMode.REPEAT,wrapT:rt.WrapMode.REPEAT})}getTexCoord(){return this.get(\"texCoord\")}setTexCoord(t){return this.set(\"texCoord\",t)}getMagFilter(){return this.get(\"magFilter\")}setMagFilter(t){return this.set(\"magFilter\",t)}getMinFilter(){return this.get(\"minFilter\")}setMinFilter(t){return this.set(\"minFilter\",t)}getWrapS(){return this.get(\"wrapS\")}setWrapS(t){return this.set(\"wrapS\",t)}getWrapT(){return this.get(\"wrapT\")}setWrapT(t){return this.set(\"wrapT\",t)}}rt.WrapMode={CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},rt.MagFilter={NEAREST:9728,LINEAR:9729},rt.MinFilter={NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987};const{R:st,G:nt,B:it,A:ot}=y;class at extends H{init(){this.propertyType=p.MATERIAL}getDefaults(){return Object.assign(super.getDefaults(),{alphaMode:at.AlphaMode.OPAQUE,alphaCutoff:.5,doubleSided:!1,baseColorFactor:[1,1,1,1],baseColorTexture:null,baseColorTextureInfo:new rt(this.graph,\"baseColorTextureInfo\"),emissiveFactor:[0,0,0],emissiveTexture:null,emissiveTextureInfo:new rt(this.graph,\"emissiveTextureInfo\"),normalScale:1,normalTexture:null,normalTextureInfo:new rt(this.graph,\"normalTextureInfo\"),occlusionStrength:1,occlusionTexture:null,occlusionTextureInfo:new rt(this.graph,\"occlusionTextureInfo\"),roughnessFactor:1,metallicFactor:1,metallicRoughnessTexture:null,metallicRoughnessTextureInfo:new rt(this.graph,\"metallicRoughnessTextureInfo\")})}getDoubleSided(){return this.get(\"doubleSided\")}setDoubleSided(t){return this.set(\"doubleSided\",t)}getAlpha(){return this.get(\"baseColorFactor\")[3]}setAlpha(t){const e=this.get(\"baseColorFactor\").slice();return e[3]=t,this.set(\"baseColorFactor\",e)}getAlphaMode(){return this.get(\"alphaMode\")}setAlphaMode(t){return this.set(\"alphaMode\",t)}getAlphaCutoff(){return this.get(\"alphaCutoff\")}setAlphaCutoff(t){return this.set(\"alphaCutoff\",t)}getBaseColorFactor(){return this.get(\"baseColorFactor\")}setBaseColorFactor(t){return this.set(\"baseColorFactor\",t)}getBaseColorHex(){return S.factorToHex(this.get(\"baseColorFactor\"))}setBaseColorHex(t){const e=this.get(\"baseColorFactor\").slice();return this.set(\"baseColorFactor\",S.hexToFactor(t,e))}getBaseColorTexture(){return this.getRef(\"baseColorTexture\")}getBaseColorTextureInfo(){return this.getRef(\"baseColorTexture\")?this.getRef(\"baseColorTextureInfo\"):null}setBaseColorTexture(t){return this.setRef(\"baseColorTexture\",t,{channels:st|nt|it|ot})}getEmissiveFactor(){return this.get(\"emissiveFactor\")}setEmissiveFactor(t){return this.set(\"emissiveFactor\",t)}getEmissiveHex(){return S.factorToHex(this.get(\"emissiveFactor\"))}setEmissiveHex(t){const e=this.get(\"emissiveFactor\").slice();return this.set(\"emissiveFactor\",S.hexToFactor(t,e))}getEmissiveTexture(){return this.getRef(\"emissiveTexture\")}getEmissiveTextureInfo(){return this.getRef(\"emissiveTexture\")?this.getRef(\"emissiveTextureInfo\"):null}setEmissiveTexture(t){return this.setRef(\"emissiveTexture\",t,{channels:st|nt|it})}getNormalScale(){return this.get(\"normalScale\")}setNormalScale(t){return this.set(\"normalScale\",t)}getNormalTexture(){return this.getRef(\"normalTexture\")}getNormalTextureInfo(){return this.getRef(\"normalTexture\")?this.getRef(\"normalTextureInfo\"):null}setNormalTexture(t){return this.setRef(\"normalTexture\",t,{channels:st|nt|it})}getOcclusionStrength(){return this.get(\"occlusionStrength\")}setOcclusionStrength(t){return this.set(\"occlusionStrength\",t)}getOcclusionTexture(){return this.getRef(\"occlusionTexture\")}getOcclusionTextureInfo(){return this.getRef(\"occlusionTexture\")?this.getRef(\"occlusionTextureInfo\"):null}setOcclusionTexture(t){return this.setRef(\"occlusionTexture\",t,{channels:st})}getRoughnessFactor(){return this.get(\"roughnessFactor\")}setRoughnessFactor(t){return this.set(\"roughnessFactor\",t)}getMetallicFactor(){return this.get(\"metallicFactor\")}setMetallicFactor(t){return this.set(\"metallicFactor\",t)}getMetallicRoughnessTexture(){return this.getRef(\"metallicRoughnessTexture\")}getMetallicRoughnessTextureInfo(){return this.getRef(\"metallicRoughnessTexture\")?this.getRef(\"metallicRoughnessTextureInfo\"):null}setMetallicRoughnessTexture(t){return this.setRef(\"metallicRoughnessTexture\",t,{channels:nt|it})}}at.AlphaMode={OPAQUE:\"OPAQUE\",MASK:\"MASK\",BLEND:\"BLEND\"};class ut extends H{init(){this.propertyType=p.MESH}getDefaults(){return Object.assign(super.getDefaults(),{weights:[],primitives:[]})}addPrimitive(t){return this.addRef(\"primitives\",t)}removePrimitive(t){return this.removeRef(\"primitives\",t)}listPrimitives(){return this.listRefs(\"primitives\")}getWeights(){return this.get(\"weights\")}setWeights(t){return this.set(\"weights\",t)}}class ct extends H{constructor(...t){super(...t),this.u=null}init(){this.propertyType=p.NODE}getDefaults(){return Object.assign(super.getDefaults(),{translation:[0,0,0],rotation:[0,0,0,1],scale:[1,1,1],weights:[],camera:null,mesh:null,skin:null,children:[]})}copy(t,e=V){if(e===V)throw new Error(\"Node cannot be copied.\");return super.copy(t,e)}getTranslation(){return this.get(\"translation\")}getRotation(){return this.get(\"rotation\")}getScale(){return this.get(\"scale\")}setTranslation(t){return this.set(\"translation\",t)}setRotation(t){return this.set(\"rotation\",t)}setScale(t){return this.set(\"scale\",t)}getMatrix(){return B.compose(this.get(\"translation\"),this.get(\"rotation\"),this.get(\"scale\"),[])}setMatrix(t){const e=this.get(\"translation\").slice(),r=this.get(\"rotation\").slice(),s=this.get(\"scale\").slice();return B.decompose(t,e,r,s),this.set(\"translation\",e).set(\"rotation\",r).set(\"scale\",s)}getWorldTranslation(){const t=[0,0,0];return B.decompose(this.getWorldMatrix(),t,[0,0,0,1],[1,1,1]),t}getWorldRotation(){const t=[0,0,0,1];return B.decompose(this.getWorldMatrix(),[0,0,0],t,[1,1,1]),t}getWorldScale(){const t=[1,1,1];return B.decompose(this.getWorldMatrix(),[0,0,0],[0,0,0,1],t),t}getWorldMatrix(){const t=[];for(let e=this;e instanceof ct;e=e.u)t.push(e);let e;const r=t.pop().getMatrix();for(;e=t.pop();)(0,gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.multiply)(r,r,e.getMatrix());return r}addChild(t){t.u&&t.u.removeChild(t),this.addRef(\"children\",t),t.u=this;const r=this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes].children;return r[r.length-1].addEventListener(\"dispose\",()=>t.u=null),this}removeChild(t){return this.removeRef(\"children\",t)}listChildren(){return this.listRefs(\"children\")}getParent(){return this.u}getMesh(){return this.getRef(\"mesh\")}setMesh(t){return this.setRef(\"mesh\",t)}getCamera(){return this.getRef(\"camera\")}setCamera(t){return this.setRef(\"camera\",t)}getSkin(){return this.getRef(\"skin\")}setSkin(t){return this.setRef(\"skin\",t)}getWeights(){return this.get(\"weights\")}setWeights(t){return this.set(\"weights\",t)}traverse(t){t(this);for(const e of this.listChildren())e.traverse(t);return this}}class ht extends H{init(){this.propertyType=p.PRIMITIVE}getDefaults(){return Object.assign(super.getDefaults(),{mode:ht.Mode.TRIANGLES,material:null,indices:null,attributes:{},targets:[]})}getIndices(){return this.getRef(\"indices\")}setIndices(t){return this.setRef(\"indices\",t,{usage:w.ELEMENT_ARRAY_BUFFER})}getAttribute(t){return this.getRefMap(\"attributes\",t)}setAttribute(t,e){return this.setRefMap(\"attributes\",t,e,{usage:w.ARRAY_BUFFER})}listAttributes(){return this.listRefMapValues(\"attributes\")}listSemantics(){return this.listRefMapKeys(\"attributes\")}getMaterial(){return this.getRef(\"material\")}setMaterial(t){return this.setRef(\"material\",t)}getMode(){return this.get(\"mode\")}setMode(t){return this.set(\"mode\",t)}listTargets(){return this.listRefs(\"targets\")}addTarget(t){return this.addRef(\"targets\",t)}removeTarget(t){return this.removeRef(\"targets\",t)}}ht.Mode={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6};class lt extends W{init(){this.propertyType=p.PRIMITIVE_TARGET}getDefaults(){return Object.assign(super.getDefaults(),{attributes:{}})}getAttribute(t){return this.getRefMap(\"attributes\",t)}setAttribute(t,e){return this.setRefMap(\"attributes\",t,e,{usage:w.ARRAY_BUFFER})}listAttributes(){return this.listRefMapValues(\"attributes\")}listSemantics(){return this.listRefMapKeys(\"attributes\")}}function ft(){return(ft=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t}).apply(this,arguments)}class dt extends H{init(){this.propertyType=p.SCENE}getDefaults(){return Object.assign(super.getDefaults(),{children:[]})}copy(t,e=V){if(e===V)throw new Error(\"Scene cannot be copied.\");return super.copy(t,e)}addChild(t){t.u&&t.u.removeChild(t),this.addRef(\"children\",t),t.u=this;const r=this[property_graph__WEBPACK_IMPORTED_MODULE_0__.$attributes].children;return r[r.length-1].addEventListener(\"dispose\",()=>t.u=null),this}removeChild(t){return this.removeRef(\"children\",t)}listChildren(){return this.listRefs(\"children\")}traverse(t){for(const e of this.listChildren())e.traverse(t);return this}}class gt extends H{init(){this.propertyType=p.SKIN}getDefaults(){return Object.assign(super.getDefaults(),{skeleton:null,inverseBindMatrices:null,joints:[]})}getSkeleton(){return this.getRef(\"skeleton\")}setSkeleton(t){return this.setRef(\"skeleton\",t)}getInverseBindMatrices(){return this.getRef(\"inverseBindMatrices\")}setInverseBindMatrices(t){return this.setRef(\"inverseBindMatrices\",t,{usage:w.INVERSE_BIND_MATRICES})}addJoint(t){return this.addRef(\"joints\",t)}removeJoint(t){return this.removeRef(\"joints\",t)}listJoints(){return this.listRefs(\"joints\")}}class pt extends H{init(){this.propertyType=p.TEXTURE}getDefaults(){return Object.assign(super.getDefaults(),{image:null,mimeType:\"\",uri:\"\"})}getMimeType(){return this.get(\"mimeType\")||I.extensionToMimeType(N.extension(this.get(\"uri\")))}setMimeType(t){return this.set(\"mimeType\",t)}getURI(){return this.get(\"uri\")}setURI(t){return this.set(\"uri\",t),this.set(\"mimeType\",I.extensionToMimeType(N.extension(t))),this}getImage(){return this.get(\"image\")}setImage(t){return this.set(\"image\",E.assertView(t))}getSize(){const t=this.get(\"image\");return t?I.getSize(t,this.getMimeType()):null}}class mt extends H{init(){this.propertyType=p.ROOT}getDefaults(){return Object.assign(super.getDefaults(),{asset:{generator:\"glTF-Transform v2.4.7\",version:\"2.0\"},defaultScene:null,accessors:[],animations:[],buffers:[],cameras:[],materials:[],meshes:[],nodes:[],scenes:[],skins:[],textures:[]})}constructor(t){super(t),this.h=new Set,t.addEventListener(\"node:create\",t=>{this.l(t.target)})}clone(){throw new Error(\"Root cannot be cloned.\")}copy(t,e=V){if(e===V)throw new Error(\"Root cannot be copied.\");this.set(\"asset\",ft({},t.get(\"asset\"))),this.setName(t.getName()),this.setExtras(ft({},t.getExtras())),this.setDefaultScene(t.getDefaultScene()?e(t.getDefaultScene()):null);for(const r of t.listRefMapKeys(\"extensions\")){const s=t.getExtension(r);this.setExtension(r,e(s))}return this}l(t){return t instanceof dt?this.addRef(\"scenes\",t):t instanceof ct?this.addRef(\"nodes\",t):t instanceof tt?this.addRef(\"cameras\",t):t instanceof gt?this.addRef(\"skins\",t):t instanceof ut?this.addRef(\"meshes\",t):t instanceof at?this.addRef(\"materials\",t):t instanceof pt?this.addRef(\"textures\",t):t instanceof Z?this.addRef(\"animations\",t):t instanceof Y?this.addRef(\"accessors\",t):t instanceof X&&this.addRef(\"buffers\",t),this}getAsset(){return this.get(\"asset\")}listExtensionsUsed(){return Array.from(this.h)}listExtensionsRequired(){return this.listExtensionsUsed().filter(t=>t.isRequired())}g(t){return this.h.add(t),this}p(t){return this.h.delete(t),this}listScenes(){return this.listRefs(\"scenes\")}setDefaultScene(t){return this.setRef(\"defaultScene\",t)}getDefaultScene(){return this.getRef(\"defaultScene\")}listNodes(){return this.listRefs(\"nodes\")}listCameras(){return this.listRefs(\"cameras\")}listSkins(){return this.listRefs(\"skins\")}listMeshes(){return this.listRefs(\"meshes\")}listMaterials(){return this.listRefs(\"materials\")}listTextures(){return this.listRefs(\"textures\")}listAnimations(){return this.listRefs(\"animations\")}listAccessors(){return this.listRefs(\"accessors\")}listBuffers(){return this.listRefs(\"buffers\")}}class wt{constructor(){this.m=new property_graph__WEBPACK_IMPORTED_MODULE_0__.Graph,this.v=new mt(this.m),this.T=F.DEFAULT_INSTANCE}getRoot(){return this.v}getGraph(){return this.m}getLogger(){return this.T}setLogger(t){return this.T=t,this}clone(){return(new wt).setLogger(this.T).merge(this)}merge(t){for(const e of t.getRoot().listExtensionsUsed()){const t=this.createExtension(e.constructor);e.isRequired()&&t.setRequired(!0)}const e=new Set,r=new Map;e.add(t.v),r.set(t.v,this.v);for(const s of t.m.listEdges())for(const t of[s.getParent(),s.getChild()]){if(e.has(t))continue;let s;s=t.propertyType===p.TEXTURE_INFO?t:new(0,t.constructor)(this.m),r.set(t,s),e.add(t)}const s=t=>{const e=r.get(t);if(!e)throw new Error(\"Could resolve property.\");return e};for(const t of e){const e=r.get(t);if(!e)throw new Error(\"Could resolve property.\");e.propertyType!==p.TEXTURE_INFO&&e.copy(t,s)}return this}async transform(...t){const e=t.map(t=>t.name);for(const r of t)await r(this,{stack:e});return this}createExtension(t){const e=t.EXTENSION_NAME;return this.getRoot().listExtensionsUsed().find(t=>t.extensionName===e)||new t(this)}createScene(t=\"\"){return new dt(this.m,t)}createNode(t=\"\"){return new ct(this.m,t)}createCamera(t=\"\"){return new tt(this.m,t)}createSkin(t=\"\"){return new gt(this.m,t)}createMesh(t=\"\"){return new ut(this.m,t)}createPrimitive(){return new ht(this.m)}createPrimitiveTarget(t=\"\"){return new lt(this.m,t)}createMaterial(t=\"\"){return new at(this.m,t)}createTexture(t=\"\"){return new pt(this.m,t)}createAnimation(t=\"\"){return new Z(this.m,t)}createAnimationChannel(t=\"\"){return new K(this.m,t)}createAnimationSampler(t=\"\"){return new Q(this.m,t)}createAccessor(t=\"\",e=null){return e||(e=this.getRoot().listBuffers()[0]),new Y(this.m,t).setBuffer(e)}createBuffer(t=\"\"){return new X(this.m,t)}}class yt{constructor(t){this.extensionName=\"\",this.prereadTypes=[],this.prewriteTypes=[],this.readDependencies=[],this.writeDependencies=[],this.document=void 0,this.required=!1,this.properties=new Set,this.S=void 0,this.document=t,t.getRoot().g(this),this.S=t=>{const e=t,r=e.target;r instanceof et&&r.extensionName===this.extensionName&&(\"node:create\"===e.type&&this.M(r),\"node:dispose\"===e.type&&this.I(r))};const e=t.getGraph();e.addEventListener(\"node:create\",this.S),e.addEventListener(\"node:dispose\",this.S)}dispose(){this.document.getRoot().p(this);const t=this.document.getGraph();t.removeEventListener(\"node:create\",this.S),t.removeEventListener(\"node:dispose\",this.S);for(const t of this.properties)t.dispose()}static register(){}isRequired(){return this.required}setRequired(t){return this.required=t,this}listProperties(){return Array.from(this.properties)}M(t){return this.properties.add(t),this}I(t){return this.properties.delete(t),this}install(t,e){return this}preread(t,e){return this}prewrite(t,e){return this}}yt.EXTENSION_NAME=void 0;class vt{constructor(t){this.jsonDoc=void 0,this.buffers=[],this.bufferViews=[],this.bufferViewBuffers=[],this.accessors=[],this.textures=[],this.textureInfos=new Map,this.materials=[],this.meshes=[],this.cameras=[],this.nodes=[],this.skins=[],this.animations=[],this.scenes=[],this.jsonDoc=t}setTextureInfo(t,e){this.textureInfos.set(t,e),void 0!==e.texCoord&&t.setTexCoord(e.texCoord),void 0!==e.extras&&t.setExtras(e.extras);const r=this.jsonDoc.json.textures[e.index];if(void 0===r.sampler)return;const s=this.jsonDoc.json.samplers[r.sampler];void 0!==s.magFilter&&t.setMagFilter(s.magFilter),void 0!==s.minFilter&&t.setMinFilter(s.minFilter),void 0!==s.wrapS&&t.setWrapS(s.wrapS),void 0!==s.wrapT&&t.setWrapT(s.wrapT)}}const Tt={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},xt={logger:F.DEFAULT_INSTANCE,extensions:[],dependencies:{}};function bt(t,e){const r=e.bufferViews[t.bufferView],s=e.jsonDoc.json.bufferViews[t.bufferView],n=Tt[t.componentType],i=Y.getElementSize(t.type),o=n.BYTES_PER_ELEMENT;if(void 0!==s.byteStride&&s.byteStride!==i*o)return function(t,e){const r=e.bufferViews[t.bufferView],s=e.jsonDoc.json.bufferViews[t.bufferView],n=Tt[t.componentType],i=Y.getElementSize(t.type),o=n.BYTES_PER_ELEMENT,a=t.byteOffset||0,u=new n(t.count*i),c=new DataView(r.buffer,r.byteOffset,r.byteLength),h=s.byteStride;for(let e=0;e<t.count;e++)for(let r=0;r<i;r++){const s=a+e*h+r*o;let n;switch(t.componentType){case Y.ComponentType.FLOAT:n=c.getFloat32(s,!0);break;case Y.ComponentType.UNSIGNED_INT:n=c.getUint32(s,!0);break;case Y.ComponentType.UNSIGNED_SHORT:n=c.getUint16(s,!0);break;case Y.ComponentType.UNSIGNED_BYTE:n=c.getUint8(s);break;case Y.ComponentType.SHORT:n=c.getInt16(s,!0);break;case Y.ComponentType.BYTE:n=c.getInt8(s);break;default:throw new Error(`Unexpected componentType \"${t.componentType}\".`)}u[e*i+r]=n}return u}(t,e);const a=r.byteOffset+(t.byteOffset||0);return new n(r.buffer.slice(a,a+t.count*i*o))}var At;!function(t){t[t.ARRAY_BUFFER=34962]=\"ARRAY_BUFFER\",t[t.ELEMENT_ARRAY_BUFFER=34963]=\"ELEMENT_ARRAY_BUFFER\"}(At||(At={}));class Et{constructor(t,e,r){this.N=void 0,this.jsonDoc=void 0,this.options=void 0,this.accessorIndexMap=new Map,this.animationIndexMap=new Map,this.bufferIndexMap=new Map,this.cameraIndexMap=new Map,this.skinIndexMap=new Map,this.materialIndexMap=new Map,this.meshIndexMap=new Map,this.nodeIndexMap=new Map,this.imageIndexMap=new Map,this.textureDefIndexMap=new Map,this.textureInfoDefMap=new Map,this.samplerDefIndexMap=new Map,this.sceneIndexMap=new Map,this.imageBufferViews=[],this.otherBufferViews=new Map,this.otherBufferViewsIndexMap=new Map,this.extensionData={},this.bufferURIGenerator=void 0,this.imageURIGenerator=void 0,this.logger=void 0,this.O=new Map,this.accessorUsageGroupedByParent=new Set([\"ARRAY_BUFFER\"]),this.accessorParents=new Map,this.N=t,this.jsonDoc=e,this.options=r;const s=t.getRoot(),n=s.listBuffers().length,i=s.listTextures().length;this.bufferURIGenerator=new St(n>1,()=>r.basename||\"buffer\"),this.imageURIGenerator=new St(i>1,e=>function(t,e){const r=t.getGraph().listParentEdges(e).find(e=>e.getParent()!==t.getRoot());return r?r.getName().replace(/texture$/i,\"\"):\"\"}(t,e)||r.basename||\"texture\"),this.logger=t.getLogger()}createTextureInfoDef(t,e){const r={magFilter:e.getMagFilter()||void 0,minFilter:e.getMinFilter()||void 0,wrapS:e.getWrapS(),wrapT:e.getWrapT()},s=JSON.stringify(r);this.samplerDefIndexMap.has(s)||(this.samplerDefIndexMap.set(s,this.jsonDoc.json.samplers.length),this.jsonDoc.json.samplers.push(r));const n={source:this.imageIndexMap.get(t),sampler:this.samplerDefIndexMap.get(s)},i=JSON.stringify(n);this.textureDefIndexMap.has(i)||(this.textureDefIndexMap.set(i,this.jsonDoc.json.textures.length),this.jsonDoc.json.textures.push(n));const o={index:this.textureDefIndexMap.get(i)};return 0!==e.getTexCoord()&&(o.texCoord=e.getTexCoord()),Object.keys(e.getExtras()).length>0&&(o.extras=e.getExtras()),this.textureInfoDefMap.set(e,o),o}createPropertyDef(t){const e={};return t.getName()&&(e.name=t.getName()),Object.keys(t.getExtras()).length>0&&(e.extras=t.getExtras()),e}createAccessorDef(t){const e=this.createPropertyDef(t);return e.type=t.getType(),e.componentType=t.getComponentType(),e.count=t.getCount(),this.N.getGraph().listParentEdges(t).some(t=>\"attributes\"===t.getName()&&\"POSITION\"===t.getAttributes().key||\"input\"===t.getName())&&(e.max=t.getMax([]).map(Math.fround),e.min=t.getMin([]).map(Math.fround)),t.getNormalized()&&(e.normalized=t.getNormalized()),e}createImageData(t,e,r){if(this.options.format===v.GLB)this.imageBufferViews.push(e),t.bufferView=this.jsonDoc.json.bufferViews.length,this.jsonDoc.json.bufferViews.push({buffer:0,byteOffset:-1,byteLength:e.byteLength});else{const s=I.mimeTypeToExtension(r.getMimeType());t.uri=this.imageURIGenerator.createURI(r,s),this.jsonDoc.resources[t.uri]=e}}getAccessorUsage(t){const e=this.O.get(t);if(e)return e;for(const e of this.N.getGraph().listParentEdges(t)){const{usage:t}=e.getAttributes();if(t)return t;e.getParent().propertyType!==p.ROOT&&this.N.getLogger().warn(`Missing attribute \".usage\" on edge, \"${e.getName()}\".`)}return Et.BufferViewUsage.OTHER}addAccessorToUsageGroup(t,e){const r=this.O.get(t);if(r&&r!==e)throw new Error(`Accessor with usage \"${r}\" cannot be reused as \"${e}\".`);return this.O.set(t,e),this}listAccessorUsageGroups(){const t={};for(const[e,r]of Array.from(this.O.entries()))t[r]=t[r]||[],t[r].push(e);return t}}Et.BufferViewTarget=At,Et.BufferViewUsage=w,Et.USAGE_TO_TARGET={[w.ARRAY_BUFFER]:At.ARRAY_BUFFER,[w.ELEMENT_ARRAY_BUFFER]:At.ELEMENT_ARRAY_BUFFER};class St{constructor(t,e){this.multiple=void 0,this.basename=void 0,this.counter={},this.multiple=t,this.basename=e}createURI(t,e){if(t.getURI())return t.getURI();if(this.multiple){const r=this.basename(t);return this.counter[r]=this.counter[r]||1,`${r}_${this.counter[r]++}.${e}`}return`${this.basename(t)}.${e}`}}const{BufferViewUsage:Mt}=Et;var It;!function(t){t[t.JSON=1313821514]=\"JSON\",t[t.BIN=5130562]=\"BIN\"}(It||(It={}));class Rt{constructor(){this.T=F.DEFAULT_INSTANCE,this.h=new Set,this.C={},this.F=m.INTERLEAVED,this.lastReadBytes=0,this.lastWriteBytes=0}setLogger(t){return this.T=t,this}registerExtensions(t){for(const e of t)this.h.add(e),e.register();return this}registerDependencies(t){return Object.assign(this.C,t),this}setVertexLayout(t){return this.F=t,this}async read(t){return await this.readJSON(await this.readAsJSON(t))}async readAsJSON(t){return t.match(/^data:application\\/octet-stream;/)||this.detectFormat(t)===v.GLB?this.P(t):this.U(t)}async readJSON(t){return t=this.j(t),this.L(t),class{static read(t,e=xt){const r=ft({},xt,e),{json:s}=t,n=new wt;this.validate(t,r);const i=new vt(t),o=s.asset,a=n.getRoot().getAsset();o.copyright&&(a.copyright=o.copyright),o.extras&&(a.extras=o.extras),void 0!==s.extras&&n.getRoot().setExtras(ft({},s.extras));const u=s.extensionsUsed||[],c=s.extensionsRequired||[];for(const t of r.extensions)if(u.includes(t.EXTENSION_NAME)){const e=n.createExtension(t).setRequired(c.includes(t.EXTENSION_NAME));for(const t of e.readDependencies)e.install(t,r.dependencies[t])}const h=s.buffers||[];n.getRoot().listExtensionsUsed().filter(t=>t.prereadTypes.includes(p.BUFFER)).forEach(t=>t.preread(i,p.BUFFER)),i.buffers=h.map(t=>{const e=n.createBuffer(t.name);return t.extras&&e.setExtras(t.extras),t.uri&&0!==t.uri.indexOf(\"__\")&&e.setURI(t.uri),e}),i.bufferViewBuffers=(s.bufferViews||[]).map((e,r)=>{if(!i.bufferViews[r]){const s=t.json.buffers[e.buffer];i.bufferViews[r]=E.toView(s.uri?t.resources[s.uri]:t.resources[\"@glb.bin\"],e.byteOffset||0,e.byteLength)}return i.buffers[e.buffer]}),i.accessors=(s.accessors||[]).map(t=>{const e=n.createAccessor(t.name,i.bufferViewBuffers[t.bufferView]).setType(t.type);if(t.extras&&e.setExtras(t.extras),void 0!==t.normalized&&e.setNormalized(t.normalized),void 0===t.bufferView&&!t.sparse)return e;let r;return r=void 0!==t.sparse?function(t,e){const r=Tt[t.componentType],s=Y.getElementSize(t.type);let n;n=void 0!==t.bufferView?bt(t,e):new r(t.count*s);const i=t.sparse,o=i.count,a=ft({},t,i.indices,{count:o,type:\"SCALAR\"}),u=ft({},t,i.values,{count:o}),c=bt(a,e),h=bt(u,e);for(let t=0;t<a.count;t++)for(let e=0;e<s;e++)n[c[t]*s+e]=h[t*s+e];return n}(t,i):bt(t,i),e.setArray(r),e});const l=s.images||[],f=s.textures||[];n.getRoot().listExtensionsUsed().filter(t=>t.prereadTypes.includes(p.TEXTURE)).forEach(t=>t.preread(i,p.TEXTURE)),i.textures=l.map(e=>{const r=n.createTexture(e.name);if(e.extras&&r.setExtras(e.extras),void 0!==e.bufferView){const n=s.bufferViews[e.bufferView],i=t.json.buffers[n.buffer],o=n.byteOffset||0,a=(i.uri?t.resources[i.uri]:t.resources[\"@glb.bin\"]).slice(o,o+n.byteLength);r.setImage(a)}else void 0!==e.uri&&(r.setImage(t.resources[e.uri]),0!==e.uri.indexOf(\"__\")&&r.setURI(e.uri));if(void 0!==e.mimeType)r.setMimeType(e.mimeType);else if(e.uri){const t=N.extension(e.uri);r.setMimeType(I.extensionToMimeType(t))}return r}),i.materials=(s.materials||[]).map(t=>{const e=n.createMaterial(t.name);t.extras&&e.setExtras(t.extras),void 0!==t.alphaMode&&e.setAlphaMode(t.alphaMode),void 0!==t.alphaCutoff&&e.setAlphaCutoff(t.alphaCutoff),void 0!==t.doubleSided&&e.setDoubleSided(t.doubleSided);const r=t.pbrMetallicRoughness||{};if(void 0!==r.baseColorFactor&&e.setBaseColorFactor(r.baseColorFactor),void 0!==t.emissiveFactor&&e.setEmissiveFactor(t.emissiveFactor),void 0!==r.metallicFactor&&e.setMetallicFactor(r.metallicFactor),void 0!==r.roughnessFactor&&e.setRoughnessFactor(r.roughnessFactor),void 0!==r.baseColorTexture){const t=r.baseColorTexture;e.setBaseColorTexture(i.textures[f[t.index].source]),i.setTextureInfo(e.getBaseColorTextureInfo(),t)}if(void 0!==t.emissiveTexture){const r=t.emissiveTexture;e.setEmissiveTexture(i.textures[f[r.index].source]),i.setTextureInfo(e.getEmissiveTextureInfo(),r)}if(void 0!==t.normalTexture){const r=t.normalTexture;e.setNormalTexture(i.textures[f[r.index].source]),i.setTextureInfo(e.getNormalTextureInfo(),r),void 0!==t.normalTexture.scale&&e.setNormalScale(t.normalTexture.scale)}if(void 0!==t.occlusionTexture){const r=t.occlusionTexture;e.setOcclusionTexture(i.textures[f[r.index].source]),i.setTextureInfo(e.getOcclusionTextureInfo(),r),void 0!==t.occlusionTexture.strength&&e.setOcclusionStrength(t.occlusionTexture.strength)}if(void 0!==r.metallicRoughnessTexture){const t=r.metallicRoughnessTexture;e.setMetallicRoughnessTexture(i.textures[f[t.index].source]),i.setTextureInfo(e.getMetallicRoughnessTextureInfo(),t)}return e});const d=s.meshes||[];n.getRoot().listExtensionsUsed().filter(t=>t.prereadTypes.includes(p.PRIMITIVE)).forEach(t=>t.preread(i,p.PRIMITIVE)),i.meshes=d.map(t=>{const e=n.createMesh(t.name);return t.extras&&e.setExtras(t.extras),void 0!==t.weights&&e.setWeights(t.weights),(t.primitives||[]).forEach(r=>{const s=n.createPrimitive();r.extras&&s.setExtras(r.extras),void 0!==r.material&&s.setMaterial(i.materials[r.material]),void 0!==r.mode&&s.setMode(r.mode);for(const[t,e]of Object.entries(r.attributes||{}))s.setAttribute(t,i.accessors[e]);void 0!==r.indices&&s.setIndices(i.accessors[r.indices]);const o=t.extras&&t.extras.targetNames||[];(r.targets||[]).forEach((t,e)=>{const r=o[e]||e.toString(),a=n.createPrimitiveTarget(r);for(const[e,r]of Object.entries(t))a.setAttribute(e,i.accessors[r]);s.addTarget(a)}),e.addPrimitive(s)}),e}),i.cameras=(s.cameras||[]).map(t=>{const e=n.createCamera(t.name).setType(t.type);if(t.extras&&e.setExtras(t.extras),t.type===tt.Type.PERSPECTIVE){const r=t.perspective;e.setYFov(r.yfov),e.setZNear(r.znear),void 0!==r.zfar&&e.setZFar(r.zfar),void 0!==r.aspectRatio&&e.setAspectRatio(r.aspectRatio)}else{const r=t.orthographic;e.setZNear(r.znear).setZFar(r.zfar).setXMag(r.xmag).setYMag(r.ymag)}return e});const g=s.nodes||[];n.getRoot().listExtensionsUsed().filter(t=>t.prereadTypes.includes(p.NODE)).forEach(t=>t.preread(i,p.NODE)),i.nodes=g.map(t=>{const e=n.createNode(t.name);if(t.extras&&e.setExtras(t.extras),void 0!==t.translation&&e.setTranslation(t.translation),void 0!==t.rotation&&e.setRotation(t.rotation),void 0!==t.scale&&e.setScale(t.scale),void 0!==t.matrix){const r=[0,0,0],s=[0,0,0,1],n=[1,1,1];B.decompose(t.matrix,r,s,n),e.setTranslation(r),e.setRotation(s),e.setScale(n)}return void 0!==t.weights&&e.setWeights(t.weights),e}),i.skins=(s.skins||[]).map(t=>{const e=n.createSkin(t.name);t.extras&&e.setExtras(t.extras),void 0!==t.inverseBindMatrices&&e.setInverseBindMatrices(i.accessors[t.inverseBindMatrices]),void 0!==t.skeleton&&e.setSkeleton(i.nodes[t.skeleton]);for(const r of t.joints)e.addJoint(i.nodes[r]);return e}),g.map((t,e)=>{const r=i.nodes[e];(t.children||[]).forEach(t=>r.addChild(i.nodes[t])),void 0!==t.mesh&&r.setMesh(i.meshes[t.mesh]),void 0!==t.camera&&r.setCamera(i.cameras[t.camera]),void 0!==t.skin&&r.setSkin(i.skins[t.skin])}),i.animations=(s.animations||[]).map(t=>{const e=n.createAnimation(t.name);t.extras&&e.setExtras(t.extras);const r=(t.samplers||[]).map(t=>{const r=n.createAnimationSampler().setInput(i.accessors[t.input]).setOutput(i.accessors[t.output]).setInterpolation(t.interpolation||Q.Interpolation.LINEAR);return t.extras&&r.setExtras(t.extras),e.addSampler(r),r});return(t.channels||[]).forEach(t=>{const s=n.createAnimationChannel().setSampler(r[t.sampler]).setTargetPath(t.target.path);void 0!==t.target.node&&s.setTargetNode(i.nodes[t.target.node]),t.extras&&s.setExtras(t.extras),e.addChannel(s)}),e});const m=s.scenes||[];return n.getRoot().listExtensionsUsed().filter(t=>t.prereadTypes.includes(p.SCENE)).forEach(t=>t.preread(i,p.SCENE)),i.scenes=m.map(t=>{const e=n.createScene(t.name);return t.extras&&e.setExtras(t.extras),(t.nodes||[]).map(t=>i.nodes[t]).forEach(t=>e.addChild(t)),e}),void 0!==s.scene&&n.getRoot().setDefaultScene(i.scenes[s.scene]),n.getRoot().listExtensionsUsed().forEach(t=>t.read(i)),n}static validate(t,e){const r=t.json;if(\"2.0\"!==r.asset.version)throw new Error(`Unsupported glTF version, \"${r.asset.version}\".`);if(r.extensionsRequired)for(const t of r.extensionsRequired)if(!e.extensions.find(e=>e.EXTENSION_NAME===t))throw new Error(`Missing required extension, \"${t}\".`);if(r.extensionsUsed)for(const t of r.extensionsUsed)e.extensions.find(e=>e.EXTENSION_NAME===t)||e.logger.warn(`Missing optional extension, \"${t}\".`)}}.read(t,{extensions:Array.from(this.h),dependencies:this.C,logger:this.T})}async binaryToJSON(t){const e=this._(E.assertView(t));this.L(e);const r=e.json;if(r.buffers&&r.buffers.some(t=>function(t,e){return void 0!==e.uri&&!(e.uri in t.resources)}(e,t)))throw new Error(\"Cannot resolve external buffers with binaryToJSON().\");if(r.images&&r.images.some(t=>function(t,e){return void 0!==e.uri&&!(e.uri in t.resources)&&void 0===e.bufferView}(e,t)))throw new Error(\"Cannot resolve external images with binaryToJSON().\");return e}async readBinary(t){return this.readJSON(await this.binaryToJSON(E.assertView(t)))}async writeJSON(t,e={}){if(e.format===v.GLB&&t.getRoot().listBuffers().length>1)throw new Error(\"GLB must have 0–1 buffers.\");return class{static write(t,e){const r=t.getRoot(),s={asset:ft({generator:\"glTF-Transform v2.4.7\"},r.getAsset()),extras:ft({},r.getExtras())},n={json:s,resources:{}},i=new Et(t,n,e),o=e.logger||F.DEFAULT_INSTANCE,a=new Set(e.extensions.map(t=>t.EXTENSION_NAME)),u=t.getRoot().listExtensionsUsed().filter(t=>a.has(t.extensionName)),c=t.getRoot().listExtensionsRequired().filter(t=>a.has(t.extensionName));u.length<t.getRoot().listExtensionsUsed().length&&o.warn(\"Some extensions were not registered for I/O, and will not be written.\");for(const t of u)for(const r of t.writeDependencies)t.install(r,e.dependencies[r]);function h(t,e,r,n){const o=[];let a=0;for(const e of t){const t=i.createAccessorDef(e);t.bufferView=s.bufferViews.length;const r=e.getArray(),n=E.pad(E.toView(r));t.byteOffset=a,a+=n.byteLength,o.push(n),i.accessorIndexMap.set(e,s.accessors.length),s.accessors.push(t)}const u={buffer:e,byteOffset:r,byteLength:E.concat(o).byteLength};return n&&(u.target=n),s.bufferViews.push(u),{buffers:o,byteLength:a}}function l(t,e,r){const n=t[0].getCount();let o=0;for(const e of t){const t=i.createAccessorDef(e);t.bufferView=s.bufferViews.length,t.byteOffset=o;const r=e.getElementSize(),n=e.getComponentSize();o+=E.padNumber(r*n),i.accessorIndexMap.set(e,s.accessors.length),s.accessors.push(t)}const a=n*o,u=new ArrayBuffer(a),c=new DataView(u);for(let e=0;e<n;e++){let r=0;for(const s of t){const t=s.getElementSize(),n=s.getComponentSize(),i=s.getComponentType(),a=s.getArray();for(let s=0;s<t;s++){const u=e*o+r+s*n,h=a[e*t+s];switch(i){case Y.ComponentType.FLOAT:c.setFloat32(u,h,!0);break;case Y.ComponentType.BYTE:c.setInt8(u,h);break;case Y.ComponentType.SHORT:c.setInt16(u,h,!0);break;case Y.ComponentType.UNSIGNED_BYTE:c.setUint8(u,h);break;case Y.ComponentType.UNSIGNED_SHORT:c.setUint16(u,h,!0);break;case Y.ComponentType.UNSIGNED_INT:c.setUint32(u,h,!0);break;default:throw new Error(\"Unexpected component type: \"+i)}}r+=E.padNumber(t*n)}}return s.bufferViews.push({buffer:e,byteOffset:r,byteLength:a,byteStride:o,target:Et.BufferViewTarget.ARRAY_BUFFER}),{byteLength:a,buffers:[new Uint8Array(u)]}}const f=new Map;for(const e of t.getGraph().listEdges()){if(e.getParent()===r)continue;const t=e.getChild();if(t instanceof Y){const r=f.get(t)||[];r.push(e),f.set(t,r)}}if(s.accessors=[],s.bufferViews=[],s.samplers=[],s.textures=[],s.images=r.listTextures().map((t,e)=>{const r=i.createPropertyDef(t);t.getMimeType()&&(r.mimeType=t.getMimeType());const s=t.getImage();return s&&i.createImageData(r,s,t),i.imageIndexMap.set(t,e),r}),u.filter(t=>t.prewriteTypes.includes(p.ACCESSOR)).forEach(t=>t.prewrite(i,p.ACCESSOR)),r.listAccessors().forEach(t=>{const e=i.accessorUsageGroupedByParent,r=i.accessorParents;if(i.accessorIndexMap.has(t))return;const s=f.get(t)||[],n=i.getAccessorUsage(t);if(i.addAccessorToUsageGroup(t,n),e.has(n)){const e=s[0].getParent(),n=r.get(e)||new Set;n.add(t),r.set(e,n)}}),u.filter(t=>t.prewriteTypes.includes(p.BUFFER)).forEach(t=>t.prewrite(i,p.BUFFER)),(r.listAccessors().length>0||r.listTextures().length>0||i.otherBufferViews.size>0)&&0===r.listBuffers().length)throw new Error(\"Buffer required for Document resources, but none was found.\");s.buffers=[],r.listBuffers().forEach((t,r)=>{const o=i.createPropertyDef(t),a=i.accessorUsageGroupedByParent,u=i.accessorParents,c=t.listParents().filter(t=>t instanceof Y),f=new Set(c),d=[],g=s.buffers.length;let p=0;const w=i.listAccessorUsageGroups();for(const t in w)if(a.has(t))for(const r of Array.from(u.values())){const s=Array.from(r).filter(t=>f.has(t)).filter(e=>i.getAccessorUsage(e)===t);if(s.length)if(t!==Mt.ARRAY_BUFFER||e.vertexLayout===m.INTERLEAVED){const e=t===Mt.ARRAY_BUFFER?l(s,g,p):h(s,g,p);p+=e.byteLength,d.push(...e.buffers)}else for(const t of s){const e=l([t],g,p);p+=e.byteLength,d.push(...e.buffers)}}else{const e=w[t].filter(t=>f.has(t));if(!e.length)continue;const r=h(e,g,p,t===Mt.ELEMENT_ARRAY_BUFFER?Et.BufferViewTarget.ELEMENT_ARRAY_BUFFER:void 0);p+=r.byteLength,d.push(...r.buffers)}if(i.imageBufferViews.length&&0===r)for(let t=0;t<i.imageBufferViews.length;t++)if(s.bufferViews[s.images[t].bufferView].byteOffset=p,p+=i.imageBufferViews[t].byteLength,d.push(i.imageBufferViews[t]),p%8){const t=8-p%8;p+=t,d.push(new Uint8Array(t))}if(i.otherBufferViews.has(t))for(const e of i.otherBufferViews.get(t))s.bufferViews.push({buffer:g,byteOffset:p,byteLength:e.byteLength}),i.otherBufferViewsIndexMap.set(e,s.bufferViews.length-1),p+=e.byteLength,d.push(e);if(p){let r;e.format===v.GLB?r=\"@glb.bin\":(r=i.bufferURIGenerator.createURI(t,\"bin\"),o.uri=r),o.byteLength=p,n.resources[r]=E.concat(d)}s.buffers.push(o),i.bufferIndexMap.set(t,r)}),r.listAccessors().find(t=>!t.getBuffer())&&o.warn(\"Skipped writing one or more Accessors: no Buffer assigned.\"),s.materials=r.listMaterials().map((t,e)=>{const r=i.createPropertyDef(t);if(t.getAlphaMode()!==at.AlphaMode.OPAQUE&&(r.alphaMode=t.getAlphaMode()),t.getAlphaMode()===at.AlphaMode.MASK&&(r.alphaCutoff=t.getAlphaCutoff()),t.getDoubleSided()&&(r.doubleSided=!0),r.pbrMetallicRoughness={},B.eq(t.getBaseColorFactor(),[1,1,1,1])||(r.pbrMetallicRoughness.baseColorFactor=t.getBaseColorFactor()),B.eq(t.getEmissiveFactor(),[0,0,0])||(r.emissiveFactor=t.getEmissiveFactor()),1!==t.getRoughnessFactor()&&(r.pbrMetallicRoughness.roughnessFactor=t.getRoughnessFactor()),1!==t.getMetallicFactor()&&(r.pbrMetallicRoughness.metallicFactor=t.getMetallicFactor()),t.getBaseColorTexture()){const e=t.getBaseColorTexture(),s=t.getBaseColorTextureInfo();r.pbrMetallicRoughness.baseColorTexture=i.createTextureInfoDef(e,s)}if(t.getEmissiveTexture()){const e=t.getEmissiveTexture(),s=t.getEmissiveTextureInfo();r.emissiveTexture=i.createTextureInfoDef(e,s)}if(t.getNormalTexture()){const e=t.getNormalTexture(),s=t.getNormalTextureInfo(),n=i.createTextureInfoDef(e,s);1!==t.getNormalScale()&&(n.scale=t.getNormalScale()),r.normalTexture=n}if(t.getOcclusionTexture()){const e=t.getOcclusionTexture(),s=t.getOcclusionTextureInfo(),n=i.createTextureInfoDef(e,s);1!==t.getOcclusionStrength()&&(n.strength=t.getOcclusionStrength()),r.occlusionTexture=n}if(t.getMetallicRoughnessTexture()){const e=t.getMetallicRoughnessTexture(),s=t.getMetallicRoughnessTextureInfo();r.pbrMetallicRoughness.metallicRoughnessTexture=i.createTextureInfoDef(e,s)}return i.materialIndexMap.set(t,e),r}),s.meshes=r.listMeshes().map((t,e)=>{const r=i.createPropertyDef(t);let s=null;return r.primitives=t.listPrimitives().map(t=>{const e={attributes:{}};e.mode=t.getMode();const r=t.getMaterial();r&&(e.material=i.materialIndexMap.get(r)),Object.keys(t.getExtras()).length&&(e.extras=t.getExtras());const n=t.getIndices();n&&(e.indices=i.accessorIndexMap.get(n));for(const r of t.listSemantics())e.attributes[r]=i.accessorIndexMap.get(t.getAttribute(r));for(const r of t.listTargets()){const t={};for(const e of r.listSemantics())t[e]=i.accessorIndexMap.get(r.getAttribute(e));e.targets=e.targets||[],e.targets.push(t)}return t.listTargets().length&&!s&&(s=t.listTargets().map(t=>t.getName())),e}),t.getWeights().length&&(r.weights=t.getWeights()),s&&(r.extras=r.extras||{},r.extras.targetNames=s),i.meshIndexMap.set(t,e),r}),s.cameras=r.listCameras().map((t,e)=>{const r=i.createPropertyDef(t);if(r.type=t.getType(),r.type===tt.Type.PERSPECTIVE){r.perspective={znear:t.getZNear(),zfar:t.getZFar(),yfov:t.getYFov()};const e=t.getAspectRatio();null!==e&&(r.perspective.aspectRatio=e)}else r.orthographic={znear:t.getZNear(),zfar:t.getZFar(),xmag:t.getXMag(),ymag:t.getYMag()};return i.cameraIndexMap.set(t,e),r}),s.nodes=r.listNodes().map((t,e)=>{const r=i.createPropertyDef(t);return B.eq(t.getTranslation(),[0,0,0])||(r.translation=t.getTranslation()),B.eq(t.getRotation(),[0,0,0,1])||(r.rotation=t.getRotation()),B.eq(t.getScale(),[1,1,1])||(r.scale=t.getScale()),t.getWeights().length&&(r.weights=t.getWeights()),i.nodeIndexMap.set(t,e),r}),s.skins=r.listSkins().map((t,e)=>{const r=i.createPropertyDef(t),s=t.getInverseBindMatrices();s&&(r.inverseBindMatrices=i.accessorIndexMap.get(s));const n=t.getSkeleton();return n&&(r.skeleton=i.nodeIndexMap.get(n)),r.joints=t.listJoints().map(t=>i.nodeIndexMap.get(t)),i.skinIndexMap.set(t,e),r}),r.listNodes().forEach((t,e)=>{const r=s.nodes[e],n=t.getMesh();n&&(r.mesh=i.meshIndexMap.get(n));const o=t.getCamera();o&&(r.camera=i.cameraIndexMap.get(o));const a=t.getSkin();a&&(r.skin=i.skinIndexMap.get(a)),t.listChildren().length>0&&(r.children=t.listChildren().map(t=>i.nodeIndexMap.get(t)))}),s.animations=r.listAnimations().map((t,e)=>{const r=i.createPropertyDef(t),s=new Map;return r.samplers=t.listSamplers().map((t,e)=>{const r=i.createPropertyDef(t);return r.input=i.accessorIndexMap.get(t.getInput()),r.output=i.accessorIndexMap.get(t.getOutput()),r.interpolation=t.getInterpolation(),s.set(t,e),r}),r.channels=t.listChannels().map(t=>{const e=i.createPropertyDef(t);return e.sampler=s.get(t.getSampler()),e.target={node:i.nodeIndexMap.get(t.getTargetNode()),path:t.getTargetPath()},e}),i.animationIndexMap.set(t,e),r}),s.scenes=r.listScenes().map((t,e)=>{const r=i.createPropertyDef(t);return r.nodes=t.listChildren().map(t=>i.nodeIndexMap.get(t)),i.sceneIndexMap.set(t,e),r});const d=r.getDefaultScene();return d&&(s.scene=r.listScenes().indexOf(d)),s.extensionsUsed=u.map(t=>t.extensionName),s.extensionsRequired=c.map(t=>t.extensionName),u.forEach(t=>t.write(i)),function(t){const e=[];for(const r in t){const s=t[r];(Array.isArray(s)&&0===s.length||null===s||\"\"===s||s&&\"object\"==typeof s&&0===Object.keys(s).length)&&e.push(r)}for(const r of e)delete t[r]}(s),n}}.write(t,{format:e.format||v.GLTF,basename:e.basename||\"\",logger:this.T,vertexLayout:this.F,dependencies:ft({},this.C),extensions:Array.from(this.h)})}async writeBinary(t){const{json:e,resources:r}=await this.writeJSON(t,{format:v.GLB}),s=new Uint32Array([1179937895,2,12]),n=JSON.stringify(e),i=E.pad(E.encodeText(n),32),o=E.toView(new Uint32Array([i.byteLength,1313821514])),a=E.concat([o,i]);s[s.length-1]+=a.byteLength;const u=Object.values(r)[0];if(!u||!u.byteLength)return E.concat([E.toView(s),a]);const c=E.pad(u,0),h=E.toView(new Uint32Array([c.byteLength,5130562])),l=E.concat([h,c]);return s[s.length-1]+=l.byteLength,E.concat([E.toView(s),a,l])}detectFormat(t){return\"glb\"===($.isAbsoluteURL(t)?$.extension(t):N.extension(t))?v.GLB:v.GLTF}async U(t){this.lastReadBytes=0;const e=await this.readURI(t,\"text\");this.lastReadBytes+=e.length;const r={json:JSON.parse(e),resources:{}};return await this.D(r,this.dirname(t)),this.L(r),r}async P(t){const e=await this.readURI(t,\"view\");this.lastReadBytes=e.byteLength;const r=this._(e);return await this.D(r,this.dirname(t)),this.L(r),r}async D(t,e){var r=this;const s=[...t.json.images||[],...t.json.buffers||[]].map(async function(s){const n=s.uri;if(!n||n.match(/data:/))return Promise.resolve();t.resources[n]=await r.readURI(r.resolve(e,n),\"view\"),r.lastReadBytes+=t.resources[n].byteLength});await Promise.all(s)}L(t){function e(e){if(e.uri)if(e.uri in t.resources)E.assertView(t.resources[e.uri]);else if(e.uri.match(/data:/)){const r=`__${J()}.${N.extension(e.uri)}`;t.resources[r]=E.createBufferFromDataURI(e.uri),e.uri=r}}(t.json.images||[]).forEach(t=>{if(void 0===t.bufferView&&void 0===t.uri)throw new Error(\"Missing resource URI or buffer view.\");e(t)}),(t.json.buffers||[]).forEach(e)}j(t){const{images:e,buffers:r}=t.json;return t={json:ft({},t.json),resources:ft({},t.resources)},e&&(t.json.images=e.map(t=>ft({},t))),r&&(t.json.buffers=r.map(t=>ft({},t))),t}_(t){const e=new Uint32Array(t.buffer,t.byteOffset,3);if(1179937895!==e[0])throw new Error(\"Invalid glTF asset.\");if(2!==e[1])throw new Error(`Unsupported glTF binary version, \"${e[1]}\".`);const r=new Uint32Array(t.buffer,t.byteOffset+12,2);if(r[1]!==It.JSON)throw new Error(\"Missing required GLB JSON chunk.\");const s=r[0],n=E.decodeText(E.toView(t,20,s)),i=JSON.parse(n),o=20+s;if(t.byteLength<=o)return{json:i,resources:{}};const a=new Uint32Array(t.buffer,t.byteOffset+o,2);if(a[1]!==It.BIN)throw new Error(\"Expected GLB BIN in second chunk.\");return{json:i,resources:{\"@glb.bin\":E.toView(t,o+8,a[0])}}}}class Nt extends Rt{constructor(t=null,e=$.DEFAULT_INIT){super(),this.k=void 0,this.J=void 0,this.$=void 0,this.V=void 0,this.q=!1,this.k=(__webpack_require__(/*! fs */ \"?333a\").promises),this.J=__webpack_require__(/*! path */ \"?65a8\"),this.$=t,this.V=e}setAllowHTTP(t){if(t&&!this.$)throw new Error(\"NodeIO requires a Fetch API implementation for HTTP requests.\");return this.q=t,this}async readURI(t,e){if($.isAbsoluteURL(t)){if(!this.q||!this.$)throw new Error(\"Network request blocked. Allow HTTP requests explicitly, if needed.\");const r=await this.$(t,this.V);switch(e){case\"view\":return new Uint8Array(await r.arrayBuffer());case\"text\":return r.text()}}else switch(e){case\"view\":return this.k.readFile(t);case\"text\":return this.k.readFile(t,\"utf8\")}}resolve(t,e){return $.isAbsoluteURL(t)||$.isAbsoluteURL(e)?$.resolve(t,e):this.J.resolve(t,e)}dirname(t){return $.isAbsoluteURL(t)?$.dirname(t):this.J.dirname(t)}async write(t,e){const r=!!t.match(/\\.glb$/);await(r?this.W(t,e):this.H(t,e))}async H(t,e){var r=this;this.lastWriteBytes=0;const{json:s,resources:n}=await this.writeJSON(e,{format:v.GLTF,basename:N.basename(t)}),{k:i,J:o}=this,a=o.dirname(t),u=JSON.stringify(s,null,2);this.lastWriteBytes+=u.length,await i.writeFile(t,u);const c=Object.keys(n).map(async function(t){if($.isAbsoluteURL(t)){if(\"bin\"===$.extension(t))throw new Error(`Cannot write buffer to path \"${t}\".`);return}const e=Buffer.from(n[t]);await i.writeFile(o.join(a,t),e),r.lastWriteBytes+=e.byteLength});await Promise.all(c)}async W(t,e){const r=Buffer.from(await this.writeBinary(e));await this.k.writeFile(t,r),this.lastWriteBytes=r.byteLength}}class Ot extends Rt{constructor(t){super(),this.J=void 0,this.J=t}async readURI(t,e){switch(e){case\"view\":return Deno.readFile(t);case\"text\":return Deno.readTextFile(t)}}resolve(t,e){return this.J.resolve(t,e)}dirname(t){return this.J.dirname(t)}}class Ct extends Rt{constructor(t=$.DEFAULT_INIT){super(),this.V=void 0,this.V=t}async readURI(t,e){const r=await fetch(t,this.V);switch(e){case\"view\":return new Uint8Array(await r.arrayBuffer());case\"text\":return r.text()}}resolve(t,e){return $.resolve(t,e)}dirname(t){return $.dirname(t)}detectFormat(t){return\"glb\"===$.extension(t)?v.GLB:v.GLTF}}\n//# sourceMappingURL=core.modern.js.map\n\n\n//# sourceURL=webpack://webrays/./node_modules/@gltf-transform/core/dist/core.modern.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/common.js":
/*!**********************************************!*\
  !*** ./node_modules/gl-matrix/esm/common.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ARRAY_TYPE\": () => (/* binding */ ARRAY_TYPE),\n/* harmony export */   \"EPSILON\": () => (/* binding */ EPSILON),\n/* harmony export */   \"RANDOM\": () => (/* binding */ RANDOM),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"setMatrixArrayType\": () => (/* binding */ setMatrixArrayType),\n/* harmony export */   \"toRadian\": () => (/* binding */ toRadian)\n/* harmony export */ });\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n//# sourceURL=webpack://webrays/./node_modules/gl-matrix/esm/common.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"adjoint\": () => (/* binding */ adjoint),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"determinant\": () => (/* binding */ determinant),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"frob\": () => (/* binding */ frob),\n/* harmony export */   \"fromQuat\": () => (/* binding */ fromQuat),\n/* harmony export */   \"fromQuat2\": () => (/* binding */ fromQuat2),\n/* harmony export */   \"fromRotation\": () => (/* binding */ fromRotation),\n/* harmony export */   \"fromRotationTranslation\": () => (/* binding */ fromRotationTranslation),\n/* harmony export */   \"fromRotationTranslationScale\": () => (/* binding */ fromRotationTranslationScale),\n/* harmony export */   \"fromRotationTranslationScaleOrigin\": () => (/* binding */ fromRotationTranslationScaleOrigin),\n/* harmony export */   \"fromScaling\": () => (/* binding */ fromScaling),\n/* harmony export */   \"fromTranslation\": () => (/* binding */ fromTranslation),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"fromXRotation\": () => (/* binding */ fromXRotation),\n/* harmony export */   \"fromYRotation\": () => (/* binding */ fromYRotation),\n/* harmony export */   \"fromZRotation\": () => (/* binding */ fromZRotation),\n/* harmony export */   \"frustum\": () => (/* binding */ frustum),\n/* harmony export */   \"getRotation\": () => (/* binding */ getRotation),\n/* harmony export */   \"getScaling\": () => (/* binding */ getScaling),\n/* harmony export */   \"getTranslation\": () => (/* binding */ getTranslation),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"invert\": () => (/* binding */ invert),\n/* harmony export */   \"lookAt\": () => (/* binding */ lookAt),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"multiplyScalarAndAdd\": () => (/* binding */ multiplyScalarAndAdd),\n/* harmony export */   \"ortho\": () => (/* binding */ ortho),\n/* harmony export */   \"orthoNO\": () => (/* binding */ orthoNO),\n/* harmony export */   \"orthoZO\": () => (/* binding */ orthoZO),\n/* harmony export */   \"perspective\": () => (/* binding */ perspective),\n/* harmony export */   \"perspectiveFromFieldOfView\": () => (/* binding */ perspectiveFromFieldOfView),\n/* harmony export */   \"perspectiveNO\": () => (/* binding */ perspectiveNO),\n/* harmony export */   \"perspectiveZO\": () => (/* binding */ perspectiveZO),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"targetTo\": () => (/* binding */ targetTo),\n/* harmony export */   \"translate\": () => (/* binding */ translate),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack://webrays/./node_modules/gl-matrix/esm/mat4.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"angle\": () => (/* binding */ angle),\n/* harmony export */   \"bezier\": () => (/* binding */ bezier),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"copy\": () => (/* binding */ copy),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"dist\": () => (/* binding */ dist),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"equals\": () => (/* binding */ equals),\n/* harmony export */   \"exactEquals\": () => (/* binding */ exactEquals),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach),\n/* harmony export */   \"fromValues\": () => (/* binding */ fromValues),\n/* harmony export */   \"hermite\": () => (/* binding */ hermite),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"len\": () => (/* binding */ len),\n/* harmony export */   \"length\": () => (/* binding */ length),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"mul\": () => (/* binding */ mul),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"negate\": () => (/* binding */ negate),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"scale\": () => (/* binding */ scale),\n/* harmony export */   \"scaleAndAdd\": () => (/* binding */ scaleAndAdd),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"sqrDist\": () => (/* binding */ sqrDist),\n/* harmony export */   \"sqrLen\": () => (/* binding */ sqrLen),\n/* harmony export */   \"squaredDistance\": () => (/* binding */ squaredDistance),\n/* harmony export */   \"squaredLength\": () => (/* binding */ squaredLength),\n/* harmony export */   \"str\": () => (/* binding */ str),\n/* harmony export */   \"sub\": () => (/* binding */ sub),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"transformMat3\": () => (/* binding */ transformMat3),\n/* harmony export */   \"transformMat4\": () => (/* binding */ transformMat4),\n/* harmony export */   \"transformQuat\": () => (/* binding */ transformQuat),\n/* harmony export */   \"zero\": () => (/* binding */ zero)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues(x, y, z) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://webrays/./node_modules/gl-matrix/esm/vec3.js?");

/***/ }),

/***/ "./node_modules/property-graph/dist/property-graph.modern.js":
/*!*******************************************************************!*\
  !*** ./node_modules/property-graph/dist/property-graph.modern.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$attributes\": () => (/* binding */ d),\n/* harmony export */   \"$immutableKeys\": () => (/* binding */ a),\n/* harmony export */   \"EventDispatcher\": () => (/* binding */ t),\n/* harmony export */   \"Graph\": () => (/* binding */ s),\n/* harmony export */   \"GraphEdge\": () => (/* binding */ e),\n/* harmony export */   \"GraphNode\": () => (/* binding */ o),\n/* harmony export */   \"isRef\": () => (/* binding */ r),\n/* harmony export */   \"isRefList\": () => (/* binding */ n),\n/* harmony export */   \"isRefMap\": () => (/* binding */ h)\n/* harmony export */ });\nclass t{constructor(){this._listeners={}}addEventListener(t,e){const s=this._listeners;return void 0===s[t]&&(s[t]=[]),-1===s[t].indexOf(e)&&s[t].push(e),this}removeEventListener(t,e){if(void 0===this._listeners)return this;const s=this._listeners[t];if(void 0!==s){const t=s.indexOf(e);-1!==t&&s.splice(t,1)}return this}dispatchEvent(t){if(void 0===this._listeners)return this;const e=this._listeners[t.type];if(void 0!==e){const s=e.slice(0);for(let e=0,i=s.length;e<i;e++)s[e].call(this,t)}return this}dispose(){for(const t in this._listeners)delete this._listeners[t]}}class e extends t{constructor(t,e,s,i={}){if(super(),this._name=void 0,this._parent=void 0,this._child=void 0,this._attributes=void 0,this._disposed=!1,this._name=t,this._parent=e,this._child=s,this._attributes=i,!e.isOnGraph(s))throw new Error(\"Cannot connect disconnected graphs.\")}getName(){return this._name}getParent(){return this._parent}getChild(){return this._child}setChild(t){return this._child=t,this}getAttributes(){return this._attributes}dispose(){this._disposed||(this._disposed=!0,this.dispatchEvent({type:\"dispose\",target:this}),super.dispose())}isDisposed(){return this._disposed}}class s extends t{constructor(...t){super(...t),this._emptySet=new Set,this._edges=new Set,this._parentEdges=new Map,this._childEdges=new Map}listEdges(){return Array.from(this._edges)}listParentEdges(t){return Array.from(this._childEdges.get(t)||this._emptySet)}listParents(t){return this.listParentEdges(t).map(t=>t.getParent())}listChildEdges(t){return Array.from(this._parentEdges.get(t)||this._emptySet)}listChildren(t){return this.listChildEdges(t).map(t=>t.getChild())}disconnectParents(t,e){let s=this.listParentEdges(t);return e&&(s=s.filter(t=>e(t.getParent()))),s.forEach(t=>t.dispose()),this}createEdge(t,s,i,r){return this._registerEdge(new e(t,s,i,r))}_registerEdge(t){this._edges.add(t);const e=t.getParent();this._parentEdges.has(e)||this._parentEdges.set(e,new Set),this._parentEdges.get(e).add(t);const s=t.getChild();return this._childEdges.has(s)||this._childEdges.set(s,new Set),this._childEdges.get(s).add(t),t.addEventListener(\"dispose\",()=>this._removeEdge(t)),t}_removeEdge(t){return this._edges.delete(t),this._parentEdges.get(t.getParent()).delete(t),this._childEdges.get(t.getChild()).delete(t),this}}function i(){return i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(t[i]=s[i])}return t},i.apply(this,arguments)}function r(t){return t instanceof e}function n(t){return Array.isArray(t)&&t[0]instanceof e}function h(t){return!!(t&&\"object\"==typeof t&&Object.values(t)[0]instanceof e)}const d=Symbol(\"attributes\"),a=Symbol(\"immutableKeys\");class o extends t{constructor(t){super(),this._disposed=!1,this.graph=void 0,this[d]=void 0,this[a]=void 0,this.graph=t,this[a]=new Set,this[d]=this._createAttributes()}getDefaults(){return{}}_createAttributes(){const t=this.getDefaults(),e={};for(const s in t){const i=t[s];if(i instanceof o){const t=this.graph.createEdge(s,this,i);t.addEventListener(\"dispose\",()=>i.dispose()),this[a].add(s),e[s]=t}else e[s]=i}return e}isOnGraph(t){return this.graph===t.graph}isDisposed(){return this._disposed}dispose(){this._disposed||(this.graph.listChildEdges(this).forEach(t=>t.dispose()),this.graph.disconnectParents(this),this._disposed=!0,this.dispatchEvent({type:\"dispose\"}))}detach(){return this.graph.disconnectParents(this),this}swap(t,e){for(const s in this[d]){const i=this[d][s];if(r(i)){const r=i;r.getChild()===t&&this.setRef(s,e,r.getAttributes())}else if(n(i)){const r=i.find(e=>e.getChild()===t);if(r){const i=r.getAttributes();this.removeRef(s,t).addRef(s,e,i)}}else if(h(i)){const r=i;for(const i in r){const n=r[i];n.getChild()===t&&this.setRefMap(s,i,e,n.getAttributes())}}}return this}get(t){return this[d][t]}set(t,e){return this[d][t]=e,this.dispatchEvent({type:\"change\",attribute:t})}getRef(t){const e=this[d][t];return e?e.getChild():null}setRef(t,e,s){if(this[a].has(t))throw new Error(`Cannot overwrite immutable attribute, \"${t}\".`);const i=this[d][t];if(i&&i.dispose(),!e)return this;const r=this.graph.createEdge(t,this,e,s);return r.addEventListener(\"dispose\",()=>{delete this[d][t],this.dispatchEvent({type:\"change\",attribute:t})}),this[d][t]=r,this.dispatchEvent({type:\"change\",attribute:t})}listRefs(t){return this[d][t].map(t=>t.getChild())}addRef(t,e,s){const i=this.graph.createEdge(t,this,e,s),r=this[d][t];return r.push(i),i.addEventListener(\"dispose\",()=>{const e=r.filter(t=>t!==i);r.length=0;for(const t of e)r.push(t);this.dispatchEvent({type:\"change\",attribute:t})}),this.dispatchEvent({type:\"change\",attribute:t})}removeRef(t,e){return this[d][t].filter(t=>t.getChild()===e).forEach(t=>t.dispose()),this}listRefMapKeys(t){return Object.keys(this[d][t])}listRefMapValues(t){return Object.values(this[d][t]).map(t=>t.getChild())}getRefMap(t,e){const s=this[d][t];return s[e]?s[e].getChild():null}setRefMap(t,e,s,r){const n=this[d][t],h=n[e];if(h&&h.dispose(),!s)return this;r=Object.assign(r||{},{key:e});const a=this.graph.createEdge(t,this,s,i({},r,{key:e}));return a.addEventListener(\"dispose\",()=>{delete n[e],this.dispatchEvent({type:\"change\",attribute:t,key:e})}),n[e]=a,this.dispatchEvent({type:\"change\",attribute:t,key:e})}dispatchEvent(t){return super.dispatchEvent(i({},t,{target:this})),this.graph.dispatchEvent(i({},t,{target:this,type:`node:${t.type}`})),this}}\n//# sourceMappingURL=property-graph.modern.js.map\n\n\n//# sourceURL=webpack://webrays/./node_modules/property-graph/dist/property-graph.modern.js?");

/***/ }),

/***/ "./src/control/app.ts":
/*!****************************!*\
  !*** ./src/control/app.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"App\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _view_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../view/renderer */ \"./src/view/renderer.ts\");\n/* harmony import */ var _model_scene__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../model/scene */ \"./src/model/scene.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nclass App {\r\n    constructor(canvas) {\r\n        this.mouseMove = false;\r\n        this.forwards_amount = 0;\r\n        this.right_amount = 0;\r\n        this.run = () => {\r\n            var running = true;\r\n            this.scene.update();\r\n            this.renderer.render(this.scene.get_player(), this.scene.get_meshes());\r\n            if (running) {\r\n                requestAnimationFrame(this.run);\r\n            }\r\n        };\r\n        this.canvas = canvas;\r\n        this.renderer = new _view_renderer__WEBPACK_IMPORTED_MODULE_0__.Renderer(canvas);\r\n        // this.renderer.Initialize();\r\n        this.scene = new _model_scene__WEBPACK_IMPORTED_MODULE_1__.Scene();\r\n        // this.canvas.onclick = () => {\r\n        //     this.canvas.requestPointerLock();\r\n        // }\r\n        this.canvas.addEventListener(\"mouseup\", (event) => { this.mouseMove = false; document.exitPointerLock(); });\r\n        this.canvas.addEventListener(\"mousedown\", (event) => { this.mouseMove = true; this.canvas.requestPointerLock(); });\r\n        this.canvas.addEventListener(\"mousemove\", (event) => { if (this.mouseMove)\r\n            this.handle_mouse_move(event); });\r\n        window.addEventListener(\"keypress\", (event) => { this.handle_keyboard_move(event); });\r\n    }\r\n    initialize() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.renderer.Initialize();\r\n            this.run();\r\n        });\r\n    }\r\n    handle_keyboard_move(event) {\r\n        // console.log(event.key == \"s\");\r\n        if (event.key == \"w\") {\r\n            this.forwards_amount = 0.02;\r\n            this.right_amount = 0;\r\n        }\r\n        if (event.key == \"s\") {\r\n            this.forwards_amount = -0.02;\r\n            this.right_amount = 0;\r\n        }\r\n        if (event.key == \"a\") {\r\n            this.forwards_amount = 0;\r\n            this.right_amount = -0.02;\r\n        }\r\n        if (event.key == \"d\") {\r\n            this.forwards_amount = 0;\r\n            this.right_amount = 0.02;\r\n        }\r\n        this.scene.move_player(this.forwards_amount, this.right_amount);\r\n    }\r\n    handle_mouse_move(event) {\r\n        this.scene.spin_player(-event.movementX / 5, event.movementY / 5);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/control/app.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _control_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./control/app */ \"./src/control/app.ts\");\n\r\nconst canvas = document.getElementById(\"output\");\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\nconst app = new _control_app__WEBPACK_IMPORTED_MODULE_0__.App(canvas);\r\napp.initialize();\r\n// app.run();\r\n\n\n//# sourceURL=webpack://webrays/./src/main.ts?");

/***/ }),

/***/ "./src/model/camera.ts":
/*!*****************************!*\
  !*** ./src/model/camera.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Camera\": () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ \"./src/model/math.ts\");\n\r\n\r\nclass Camera {\r\n    constructor(position = [0, 0, 0], eulers = [0, 0, 0]) {\r\n        this.position = position;\r\n        this.eulers = eulers;\r\n        this.view = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n        this.forward = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this.right = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this.up = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        this.view = gl_matrix__WEBPACK_IMPORTED_MODULE_1__.create();\r\n    }\r\n    update() {\r\n        this.forward = [\r\n            Math.cos((0,_math__WEBPACK_IMPORTED_MODULE_0__.Deg2Rad)(this.eulers[2])) * Math.cos((0,_math__WEBPACK_IMPORTED_MODULE_0__.Deg2Rad)(this.eulers[1])),\r\n            Math.sin((0,_math__WEBPACK_IMPORTED_MODULE_0__.Deg2Rad)(this.eulers[2])) * Math.cos((0,_math__WEBPACK_IMPORTED_MODULE_0__.Deg2Rad)(this.eulers[1])),\r\n            Math.sin((0,_math__WEBPACK_IMPORTED_MODULE_0__.Deg2Rad)(this.eulers[1]))\r\n        ];\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.cross(this.right, this.forward, [0, 0, 1]);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.cross(this.up, this.right, this.forward);\r\n        var target = gl_matrix__WEBPACK_IMPORTED_MODULE_2__.create();\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.add(target, this.position, this.forward);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_1__.lookAt(this.view, this.position, target, this.up);\r\n    }\r\n    get_view() {\r\n        return this.view;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/model/camera.ts?");

/***/ }),

/***/ "./src/model/math.ts":
/*!***************************!*\
  !*** ./src/model/math.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Deg2Rad\": () => (/* binding */ Deg2Rad),\n/* harmony export */   \"Rad2Deg\": () => (/* binding */ Rad2Deg)\n/* harmony export */ });\nfunction Deg2Rad(theta) {\r\n    return theta * Math.PI / 180;\r\n}\r\nfunction Rad2Deg(theta) {\r\n    return theta * 180 / Math.PI;\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/model/math.ts?");

/***/ }),

/***/ "./src/model/mesh.ts":
/*!***************************!*\
  !*** ./src/model/mesh.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh)\n/* harmony export */ });\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n\r\nclass Mesh {\r\n    constructor(position = [0, 0, 0], eulers = [0, 0, 0], scale = [1, 1, 1]) {\r\n        this.position = position;\r\n        this.eulers = eulers;\r\n        this.scale = scale;\r\n        this.model = gl_matrix__WEBPACK_IMPORTED_MODULE_0__.create();\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_0__.scale(this.model, this.model, this.scale);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_0__.rotateX(this.model, this.model, this.eulers[0]);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_0__.rotateY(this.model, this.model, this.eulers[1]);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_0__.rotateZ(this.model, this.model, this.eulers[2]);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_0__.translate(this.model, this.model, this.position);\r\n    }\r\n    update() {\r\n    }\r\n    get_model() {\r\n        return this.model;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/model/mesh.ts?");

/***/ }),

/***/ "./src/model/scene.ts":
/*!****************************!*\
  !*** ./src/model/scene.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scene\": () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mesh */ \"./src/model/mesh.ts\");\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./camera */ \"./src/model/camera.ts\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n\r\n\r\n\r\nclass Scene {\r\n    constructor() {\r\n        this.meshes = [];\r\n        this.meshes.push(new _mesh__WEBPACK_IMPORTED_MODULE_0__.Mesh([0, 0, 0], [0, 0, 0], [15, 15, 15]));\r\n        this.player = new _camera__WEBPACK_IMPORTED_MODULE_1__.Camera([-2, 0, 0.5]);\r\n    }\r\n    update() {\r\n        this.meshes.forEach((mesh) => { mesh.update(); });\r\n        this.player.update();\r\n    }\r\n    spin_player(dX, dY) {\r\n        this.player.eulers[2] -= dX;\r\n        this.player.eulers[2] %= 360;\r\n        this.player.eulers[1] = Math.min(89, Math.max(-89, this.player.eulers[1] + dY));\r\n    }\r\n    move_player(forwards_amount, right_amount) {\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scaleAndAdd(this.player.position, this.player.position, this.player.forward, forwards_amount);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_2__.scaleAndAdd(this.player.position, this.player.position, this.player.right, right_amount);\r\n        gl_matrix__WEBPACK_IMPORTED_MODULE_3__.translate(this.player.view, this.player.view, this.player.position);\r\n    }\r\n    get_player() {\r\n        return this.player;\r\n    }\r\n    get_meshes() {\r\n        return this.meshes;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/model/scene.ts?");

/***/ }),

/***/ "./src/view/gltf_mesh.ts":
/*!*******************************!*\
  !*** ./src/view/gltf_mesh.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLTFMesh\": () => (/* binding */ GLTFMesh)\n/* harmony export */ });\n/* harmony import */ var _gltf_transform_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @gltf-transform/core */ \"./node_modules/@gltf-transform/core/dist/core.modern.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./texture */ \"./src/view/texture.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\nclass GLTFMesh {\r\n    constructor(device) {\r\n        this.buffer = [];\r\n        this.indexBuffer = [];\r\n        this.indiceCount = [];\r\n        this.baseColor = [];\r\n        this.bufferLayoutList = [];\r\n        this.device = device;\r\n    }\r\n    loadMesh(uri) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const io = new _gltf_transform_core__WEBPACK_IMPORTED_MODULE_1__.WebIO();\r\n            this.mesh = yield io.read(uri);\r\n            // const meshes = this.mesh.getRoot().listMeshes();\r\n            // for(const mesh in meshes)\r\n            const mesh = this.mesh.getRoot().listMeshes()[0];\r\n            {\r\n                const primitive = mesh.listPrimitives()[0];\r\n                const indices = primitive.getIndices();\r\n                console.log(indices);\r\n                const usage = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST;\r\n                const indexdescriptor = {\r\n                    size: indices.getByteLength(),\r\n                    usage: usage,\r\n                    mappedAtCreation: true // similar to HOST_VISIBLE, allows buffer to be written by the CPU\r\n                };\r\n                this.indexBuffer.push(this.device.createBuffer(indexdescriptor));\r\n                new Uint16Array(this.indexBuffer[this.indexBuffer.length - 1].getMappedRange()).set(indices.getArray());\r\n                this.indexBuffer[this.indexBuffer.length - 1].unmap();\r\n                this.indiceCount.push(indices.getArray().length);\r\n                const semantics = [\"POSITION\", \"TEXCOORD_0\"];\r\n                semantics.forEach((semantic, index) => {\r\n                    const result = primitive.listSemantics().findIndex(element => element == semantic);\r\n                    if (result == -1) {\r\n                        throw Error;\r\n                    }\r\n                    const attribute = primitive.getAttribute(semantic);\r\n                    const usage = GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST;\r\n                    const descriptor = {\r\n                        size: attribute.getByteLength(),\r\n                        usage: usage,\r\n                        mappedAtCreation: true // similar to HOST_VISIBLE, allows buffer to be written by the CPU\r\n                    };\r\n                    this.buffer.push(this.device.createBuffer(descriptor));\r\n                    new Float32Array(this.buffer[this.buffer.length - 1].getMappedRange()).set(attribute.getArray());\r\n                    this.buffer[this.buffer.length - 1].unmap();\r\n                    console.log(attribute, index);\r\n                    let stride;\r\n                    let format;\r\n                    switch (attribute.getType()) {\r\n                        case \"VEC2\":\r\n                            stride = 8;\r\n                            format = \"float32x2\";\r\n                            break;\r\n                        case \"VEC3\":\r\n                            stride = 12;\r\n                            format = \"float32x3\";\r\n                            break;\r\n                        case \"VEC4\":\r\n                            stride = 16;\r\n                            format = \"float32x4\";\r\n                            break;\r\n                    }\r\n                    this.bufferLayoutList.push({\r\n                        arrayStride: stride,\r\n                        attributes: [\r\n                            {\r\n                                shaderLocation: index,\r\n                                format: format,\r\n                                offset: 0\r\n                            }\r\n                        ]\r\n                    });\r\n                });\r\n                const material = primitive.getMaterial();\r\n                const baseColor = material === null || material === void 0 ? void 0 : material.getBaseColorTexture();\r\n                if (baseColor) {\r\n                    const baseImage = new _texture__WEBPACK_IMPORTED_MODULE_0__.Image();\r\n                    yield baseImage.initializeFromGLTF(this.device, baseColor);\r\n                    this.baseColor.push(baseImage);\r\n                    console.log(material === null || material === void 0 ? void 0 : material.getBaseColorTexture());\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/view/gltf_mesh.ts?");

/***/ }),

/***/ "./src/view/renderer.ts":
/*!******************************!*\
  !*** ./src/view/renderer.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Renderer\": () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _assets_shaders_mesh_wgsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../assets/shaders/mesh.wgsl */ \"./src/assets/shaders/mesh.wgsl\");\n/* harmony import */ var _triangle_mesh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./triangle_mesh */ \"./src/view/triangle_mesh.ts\");\n/* harmony import */ var gl_matrix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _gltf_mesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gltf_mesh */ \"./src/view/gltf_mesh.ts\");\n/* harmony import */ var _assets_gltf_models_2_0_Avocado_glTF_Binary_Avocado_glb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assets/gltf_models/2.0/Avocado/glTF-Binary/Avocado.glb */ \"./src/assets/gltf_models/2.0/Avocado/glTF-Binary/Avocado.glb\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nclass Renderer {\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n    }\r\n    Initialize() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.setupDevice();\r\n            yield this.createAssets();\r\n            yield this.makeDepthBufferResources();\r\n            yield this.makePipeline();\r\n        });\r\n    }\r\n    setupDevice() {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // const io = new WebIO();\r\n            // console.log(mesh);\r\n            // const avocado = await io.read(mesh);\r\n            // avocado.getRoot().listMeshes().forEach((mesh) => {\r\n            //     const primitive = mesh.listPrimitives()[0];\r\n            //     console.log(primitive.getIndices());\r\n            //     console.log(primitive.listSemantics());\r\n            // });\r\n            this.adapter = (yield ((_a = navigator.gpu) === null || _a === void 0 ? void 0 : _a.requestAdapter()));\r\n            this.device = (yield ((_b = this.adapter) === null || _b === void 0 ? void 0 : _b.requestDevice()));\r\n            console.log(\"Here\");\r\n            this.context = this.canvas.getContext(\"webgpu\");\r\n            this.format = \"bgra8unorm\";\r\n            this.context.configure({\r\n                device: this.device,\r\n                format: this.format,\r\n                alphaMode: \"opaque\"\r\n            });\r\n        });\r\n    }\r\n    createAssets() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.triangleMesh = new _triangle_mesh__WEBPACK_IMPORTED_MODULE_1__.TriangleMesh(this.device);\r\n            this.avocado = new _gltf_mesh__WEBPACK_IMPORTED_MODULE_2__.GLTFMesh(this.device);\r\n            yield this.avocado.loadMesh(_assets_gltf_models_2_0_Avocado_glTF_Binary_Avocado_glb__WEBPACK_IMPORTED_MODULE_3__);\r\n        });\r\n    }\r\n    makeDepthBufferResources() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.depthStencilState = {\r\n                format: \"depth24plus-stencil8\",\r\n                depthWriteEnabled: true,\r\n                depthCompare: \"less-equal\"\r\n            };\r\n            const size = {\r\n                width: this.canvas.width,\r\n                height: this.canvas.height,\r\n                depthOrArrayLayers: 1\r\n            };\r\n            const depthBufferDescriptor = {\r\n                size: size,\r\n                format: \"depth24plus-stencil8\",\r\n                usage: GPUTextureUsage.RENDER_ATTACHMENT\r\n            };\r\n            this.depthStencilBuffer = this.device.createTexture(depthBufferDescriptor);\r\n            const viewDescriptor = {\r\n                format: \"depth24plus-stencil8\",\r\n                dimension: \"2d\",\r\n                aspect: \"all\"\r\n            };\r\n            this.depthStencilView = this.depthStencilBuffer.createView(viewDescriptor);\r\n            this.depthStencilAttachment = {\r\n                view: this.depthStencilView,\r\n                depthClearValue: 1.0,\r\n                depthLoadOp: \"clear\",\r\n                depthStoreOp: \"store\",\r\n                stencilLoadOp: \"clear\",\r\n                stencilStoreOp: \"discard\"\r\n            };\r\n        });\r\n    }\r\n    makePipeline() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.uniformBuffer = this.device.createBuffer({\r\n                size: 64 * 3,\r\n                usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST\r\n            });\r\n            const bindGroupLayout = this.device.createBindGroupLayout({\r\n                entries: [\r\n                    {\r\n                        binding: 0,\r\n                        visibility: GPUShaderStage.VERTEX | GPUShaderStage.FRAGMENT,\r\n                        buffer: {}\r\n                    },\r\n                    {\r\n                        binding: 1,\r\n                        visibility: GPUShaderStage.FRAGMENT,\r\n                        texture: {}\r\n                    },\r\n                    {\r\n                        binding: 2,\r\n                        visibility: GPUShaderStage.FRAGMENT,\r\n                        sampler: {}\r\n                    }\r\n                ],\r\n            });\r\n            console.log(this.avocado.baseColor[0].sampler);\r\n            this.bindGroup = this.device.createBindGroup({\r\n                layout: bindGroupLayout,\r\n                entries: [\r\n                    {\r\n                        binding: 0,\r\n                        resource: {\r\n                            buffer: this.uniformBuffer\r\n                        }\r\n                    },\r\n                    {\r\n                        binding: 1,\r\n                        resource: this.avocado.baseColor[0].view\r\n                    },\r\n                    {\r\n                        binding: 2,\r\n                        resource: this.avocado.baseColor[0].sampler\r\n                    }\r\n                ]\r\n            });\r\n            const pipelineLayout = this.device.createPipelineLayout({\r\n                bindGroupLayouts: [bindGroupLayout]\r\n            });\r\n            this.pipeline = this.device.createRenderPipeline({\r\n                vertex: {\r\n                    module: this.device.createShaderModule({\r\n                        code: _assets_shaders_mesh_wgsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n                    }),\r\n                    entryPoint: \"vs_main\",\r\n                    buffers: this.avocado.bufferLayoutList\r\n                },\r\n                fragment: {\r\n                    module: this.device.createShaderModule({\r\n                        code: _assets_shaders_mesh_wgsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n                    }),\r\n                    entryPoint: \"fs_main\",\r\n                    targets: [{\r\n                            format: this.format\r\n                        }]\r\n                },\r\n                primitive: {\r\n                    topology: \"triangle-list\"\r\n                },\r\n                layout: pipelineLayout,\r\n                depthStencil: this.depthStencilState\r\n            });\r\n        });\r\n    }\r\n    render(camera, meshes) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const projection = gl_matrix__WEBPACK_IMPORTED_MODULE_4__.create();\r\n            gl_matrix__WEBPACK_IMPORTED_MODULE_4__.perspective(projection, Math.PI / 4, this.canvas.width / this.canvas.height, 0.1, 10);\r\n            // const model = mat4.create();\r\n            // mat4.scale(model, model, [15,15,15]);\r\n            // mat4.translate(model, model, [0, 0.001, 0]);\r\n            // mat4.rotate(model, model, this.t, [0,1,0]);\r\n            const model = meshes[0].get_model();\r\n            const view = camera.get_view();\r\n            // mat4.lookAt(view, [-2, 0, 2], [0, 0, 0], [0, 0, 1]);\r\n            // meshes.forEach(\r\n            //     (mesh) => {\r\n            //         const model: mat4 = mesh.get_model();\r\n            //         this.device.queue.writeBuffer(this.uniformBuffer, 0, <ArrayBuffer>model); \r\n            //     }\r\n            // );\r\n            this.device.queue.writeBuffer(this.uniformBuffer, 0, model);\r\n            this.device.queue.writeBuffer(this.uniformBuffer, 64, view);\r\n            this.device.queue.writeBuffer(this.uniformBuffer, 128, projection);\r\n            const commandEncoder = this.device.createCommandEncoder();\r\n            const textureView = this.context.getCurrentTexture().createView();\r\n            const renderpass = commandEncoder.beginRenderPass({\r\n                colorAttachments: [{\r\n                        view: textureView,\r\n                        clearValue: { r: 1, g: 0.5, b: 0.25, a: 1.0 },\r\n                        loadOp: \"clear\",\r\n                        storeOp: \"store\"\r\n                    }],\r\n                depthStencilAttachment: this.depthStencilAttachment\r\n            });\r\n            renderpass.setPipeline(this.pipeline);\r\n            renderpass.setBindGroup(0, this.bindGroup);\r\n            // renderpass.setVertexBuffer(0, this.triangleMesh.buffer);\r\n            // renderpass.setVertexBuffer(1, this.triangleMesh.bufferColor);\r\n            // renderpass.draw(3, 1, 0, 0);\r\n            this.avocado.buffer.forEach((buffer, index) => {\r\n                renderpass.setVertexBuffer(index, buffer);\r\n            });\r\n            renderpass.setIndexBuffer(this.avocado.indexBuffer[0], \"uint16\");\r\n            renderpass.drawIndexed(this.avocado.indiceCount[0]);\r\n            renderpass.end();\r\n            this.device.queue.submit([commandEncoder.finish()]);\r\n            // requestAnimationFrame(this.render);\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/view/renderer.ts?");

/***/ }),

/***/ "./src/view/texture.ts":
/*!*****************************!*\
  !*** ./src/view/texture.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Image\": () => (/* binding */ Image)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nclass Image {\r\n    initialize(device, url) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const response = yield fetch(url);\r\n            const blob = yield response.blob();\r\n            const imageData = yield createImageBitmap(blob);\r\n            yield this.loadImageBitmap(device, imageData);\r\n            const viewDescriptor = {\r\n                format: \"rgba8unorm\",\r\n                dimension: \"2d\",\r\n                aspect: \"all\",\r\n                baseMipLevel: 0,\r\n                mipLevelCount: 1,\r\n                baseArrayLayer: 0,\r\n                arrayLayerCount: 1\r\n            };\r\n            this.view = this.texture.createView(viewDescriptor);\r\n            const samplerDescriptor = {\r\n                addressModeU: \"repeat\",\r\n                addressModeV: \"repeat\",\r\n                magFilter: \"linear\",\r\n                minFilter: \"nearest\",\r\n                mipmapFilter: \"nearest\",\r\n                maxAnisotropy: 1\r\n            };\r\n            this.sampler = device.createSampler(samplerDescriptor);\r\n        });\r\n    }\r\n    loadImageBitmap(device, imageData) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const textureDescriptor = {\r\n                size: {\r\n                    width: imageData.width,\r\n                    height: imageData.height\r\n                },\r\n                format: \"rgba8unorm\",\r\n                usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT\r\n            };\r\n            this.texture = device.createTexture(textureDescriptor);\r\n            device.queue.copyExternalImageToTexture({ source: imageData }, { texture: this.texture }, textureDescriptor.size);\r\n        });\r\n    }\r\n    initializeFromGLTF(device, texture) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const blob = new Blob([texture.getImage()], { type: texture.getMimeType() });\r\n            const imgBitmap = yield createImageBitmap(blob);\r\n            const imageData = yield createImageBitmap(blob);\r\n            yield this.loadImageBitmap(device, imageData);\r\n            const viewDescriptor = {\r\n                format: \"rgba8unorm\",\r\n                dimension: \"2d\",\r\n                aspect: \"all\",\r\n                baseMipLevel: 0,\r\n                mipLevelCount: 1,\r\n                baseArrayLayer: 0,\r\n                arrayLayerCount: 1\r\n            };\r\n            this.view = this.texture.createView(viewDescriptor);\r\n            const samplerDescriptor = {\r\n                addressModeU: \"repeat\",\r\n                addressModeV: \"repeat\",\r\n                magFilter: \"linear\",\r\n                minFilter: \"nearest\",\r\n                mipmapFilter: \"nearest\",\r\n                maxAnisotropy: 1\r\n            };\r\n            this.sampler = device.createSampler(samplerDescriptor);\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/view/texture.ts?");

/***/ }),

/***/ "./src/view/triangle_mesh.ts":
/*!***********************************!*\
  !*** ./src/view/triangle_mesh.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TriangleMesh\": () => (/* binding */ TriangleMesh)\n/* harmony export */ });\nclass TriangleMesh {\r\n    constructor(device) {\r\n        // x y r g b\r\n        // const vertices: Float32Array = new Float32Array(\r\n        //     [\r\n        //         0.0,  0.0,  0.5, 1.0, 0.0, 0.0,\r\n        //         0.0, -0.5, -0.5, 0.0, 1.0, 0.0,\r\n        //         0.0,  0.5, -0.5, 0.0, 0.0, 1.0\r\n        //     ]\r\n        // );\r\n        this.bufferLayoutList = [];\r\n        const vertices = new Float32Array([\r\n            0.0, 0.0, 0.5, 0.0, -0.5, -0.5, 0.0, 0.5, -0.5\r\n        ]);\r\n        const colors = new Float32Array([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]);\r\n        const usage = GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST;\r\n        //VERTEX: the buffer can be used as a vertex buffer\r\n        //COPY_DST: data can be copied to the buffer\r\n        const descriptor = {\r\n            size: vertices.byteLength,\r\n            usage: usage,\r\n            mappedAtCreation: true // similar to HOST_VISIBLE, allows buffer to be written by the CPU\r\n        };\r\n        this.buffer = device.createBuffer(descriptor);\r\n        //Buffer has been created, now load in the vertices\r\n        new Float32Array(this.buffer.getMappedRange()).set(vertices);\r\n        this.buffer.unmap();\r\n        const colordescriptor = {\r\n            size: colors.byteLength,\r\n            usage: usage,\r\n            mappedAtCreation: true // similar to HOST_VISIBLE, allows buffer to be written by the CPU\r\n        };\r\n        console.log(vertices.byteLength);\r\n        console.log(colors.byteLength);\r\n        this.bufferColor = device.createBuffer(colordescriptor);\r\n        new Float32Array(this.bufferColor.getMappedRange()).set(colors);\r\n        this.bufferColor.unmap();\r\n        //now define the buffer layout\r\n        this.bufferLayout = {\r\n            arrayStride: 12,\r\n            attributes: [\r\n                {\r\n                    shaderLocation: 0,\r\n                    format: \"float32x3\",\r\n                    offset: 0\r\n                }\r\n            ]\r\n        };\r\n        this.bufferLayoutColor = {\r\n            arrayStride: 12,\r\n            attributes: [\r\n                {\r\n                    shaderLocation: 1,\r\n                    format: \"float32x3\",\r\n                    offset: 0\r\n                }\r\n            ]\r\n        };\r\n        this.bufferLayoutList.push(this.bufferLayout);\r\n        this.bufferLayoutList.push(this.bufferLayoutColor);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://webrays/./src/view/triangle_mesh.ts?");

/***/ }),

/***/ "./src/assets/shaders/mesh.wgsl":
/*!**************************************!*\
  !*** ./src/assets/shaders/mesh.wgsl ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"struct TransformData {\\r\\n    model: mat4x4<f32>,\\r\\n    view: mat4x4<f32>,\\r\\n    projection: mat4x4<f32>,\\r\\n};\\r\\n@binding(0) @group(0) var<uniform> transformUBO: TransformData;\\r\\n@binding(1) @group(0) var myTexture: texture_2d<f32>;\\r\\n@binding(2) @group(0) var mySampler: sampler;\\r\\n\\r\\nstruct Fragment {\\r\\n    @builtin(position) Position : vec4<f32>,\\r\\n    @location(0) TexCoord : vec2<f32>\\r\\n};\\r\\n\\r\\n@vertex\\r\\nfn vs_main(@location(0) vertexPostion: vec3<f32>, @location(1) vertexUV: vec2<f32>) -> Fragment {\\r\\n\\r\\n    var output : Fragment;\\r\\n    output.Position = transformUBO.projection * transformUBO.view * transformUBO.model * vec4<f32>(vertexPostion, 1.0);\\r\\n    output.TexCoord = vertexUV;\\r\\n\\r\\n    return output;\\r\\n}\\r\\n\\r\\n@fragment\\r\\nfn fs_main(@location(0) TexCoord: vec2<f32>) -> @location(0) vec4<f32> {\\r\\n    return textureSample(myTexture, mySampler, TexCoord);\\r\\n}\");\n\n//# sourceURL=webpack://webrays/./src/assets/shaders/mesh.wgsl?");

/***/ }),

/***/ "./src/assets/gltf_models/2.0/Avocado/glTF-Binary/Avocado.glb":
/*!********************************************************************!*\
  !*** ./src/assets/gltf_models/2.0/Avocado/glTF-Binary/Avocado.glb ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("module.exports = __webpack_require__.p + \"219d1b0f1f2f448d0f1c.glb\";\n\n//# sourceURL=webpack://webrays/./src/assets/gltf_models/2.0/Avocado/glTF-Binary/Avocado.glb?");

/***/ }),

/***/ "?333a":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://webrays/fs_(ignored)?");

/***/ }),

/***/ "?65a8":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://webrays/path_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/dist/";
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;